{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		},
		"DFLeapTempStorageLink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DFLeapTempStorageLink'"
		},
		"DFPolybaseStagingStorageLink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DFPolybaseStagingStorageLink'"
		},
		"DataFoundationDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DataFoundationDB'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=pgdatafoundation.database.windows.net;Initial Catalog=DataFoundation"
		},
		"DataFoundationDB_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'DataFoundationDB'"
		},
		"Dev_DataFoundationDB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Dev_DataFoundationDB'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=pgdatafoundation.database.windows.net;Initial Catalog=DataFoundation"
		},
		"Dev_DataFoundationDB_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'Dev_DataFoundationDB'"
		},
		"HawkEye_LinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'HawkEye_LinkedService'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=pgdatafoundation.database.windows.net;Initial Catalog=db_PG_HawkeyePWA"
		},
		"HawkEye_LinkedService_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'HawkEye_LinkedService'"
		},
		"HawkeyeDBOn67_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'HawkeyeDBOn67'"
		},
		"Leap_AmazonS3_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'Leap_AmazonS3'"
		},
		"LinkedService_PnGADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LinkedService_PnGADLS'"
		},
		"MaximusDBLink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'MaximusDBLink'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=pgdatafoundation.database.windows.net;Initial Catalog=db_PG_Maximus"
		},
		"MaximusDBLink_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'MaximusDBLink'"
		},
		"PnGDCC_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PnGDCC'"
		},
		"PnGDataFoundation_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PnGDataFoundation'"
		},
		"PolybaseLink_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PolybaseLink'"
		},
		"TASDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TASDatabase'"
		},
		"TASDatabase_Check_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TASDatabase_Check'"
		},
		"TASDatabase_Test_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TASDatabase_Test'"
		},
		"dfdatafoundation_Hawkeye_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dfdatafoundation_Hawkeye'"
		},
		"DataFoundationDB_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "7ec6607e-638a-46bf-9ff0-ea38bacb5ea9"
		},
		"DataFoundationDB_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "515445df-f272-4c96-aa97-d670cbdeab20"
		},
		"Dev_DataFoundationDB_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "7ec6607e-638a-46bf-9ff0-ea38bacb5ea9"
		},
		"Dev_DataFoundationDB_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "515445df-f272-4c96-aa97-d670cbdeab20"
		},
		"HawkEye_LinkedService_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "7ec6607e-638a-46bf-9ff0-ea38bacb5ea9"
		},
		"HawkEye_LinkedService_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "515445df-f272-4c96-aa97-d670cbdeab20"
		},
		"Leap_AmazonS3_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAW6LTDL6KHDJLBDO2"
		},
		"LinkedService_PnGADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dfdatafoundationadls.dfs.core.windows.net/"
		},
		"MaximusDBLink_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "7ec6607e-638a-46bf-9ff0-ea38bacb5ea9"
		},
		"MaximusDBLink_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "515445df-f272-4c96-aa97-d670cbdeab20"
		},
		"NCSdataStorageLink_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'NCSdataStorageLink'"
		},
		"dfdatafoundationLink_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'dfdatafoundationLink'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DFLeapTempStorageLink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('DFLeapTempStorageLink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DFPolybaseStagingStorageLink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('DFPolybaseStagingStorageLink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFoundationDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('DataFoundationDB_connectionString')]",
					"servicePrincipalId": "[parameters('DataFoundationDB_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('DataFoundationDB_servicePrincipalKey')]"
					},
					"tenant": "[parameters('DataFoundationDB_properties_typeProperties_tenant')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dev_DataFoundationDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('Dev_DataFoundationDB_connectionString')]",
					"servicePrincipalId": "[parameters('Dev_DataFoundationDB_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('Dev_DataFoundationDB_servicePrincipalKey')]"
					},
					"tenant": "[parameters('Dev_DataFoundationDB_properties_typeProperties_tenant')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HawkEye_LinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('HawkEye_LinkedService_connectionString')]",
					"servicePrincipalId": "[parameters('HawkEye_LinkedService_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('HawkEye_LinkedService_servicePrincipalKey')]"
					},
					"tenant": "[parameters('HawkEye_LinkedService_properties_typeProperties_tenant')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HawkeyeDBOn67')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('HawkeyeDBOn67_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Leap_AmazonS3')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Leap_AmazonS3",
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "",
					"accessKeyId": "[parameters('Leap_AmazonS3_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('Leap_AmazonS3_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LinkedService_PnGADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "LinkedService_PnGADLS",
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LinkedService_PnGADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LinkedService_PnGADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MaximusDBLink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('MaximusDBLink_connectionString')]",
					"servicePrincipalId": "[parameters('MaximusDBLink_properties_typeProperties_servicePrincipalId')]",
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('MaximusDBLink_servicePrincipalKey')]"
					},
					"tenant": "[parameters('MaximusDBLink_properties_typeProperties_tenant')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSdataStorageLink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "NCSdataStorageLink",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('NCSdataStorageLink_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PnGDCC')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('PnGDCC_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PnGDataFoundation')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "PnGDataFoundation",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('PnGDataFoundation_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PolybaseLink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('PolybaseLink_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('TASDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASDatabase_Check')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('TASDatabase_Check_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASDatabase_Test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('TASDatabase_Test_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfdatafoundationLink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('dfdatafoundationLink_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfdatafoundation_Hawkeye')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('dfdatafoundation_Hawkeye_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AstixSubD')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AS_ResumeandScale_S8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AS_Status_ActivityAPI",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 1,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/15354be3-bb86-4045-a1a1-7bf7d9ba1c31/resourceGroups/DBRDashboard/providers/Microsoft.AnalysisServices/servers/dbrdashboard/?api-version=2017-08-01",
							"method": "GET",
							"headers": {},
							"body": {
								"value": "{\"Dummy\":\"Dummy\"}",
								"type": "Expression"
							},
							"authentication": {
								"type": "MSI",
								"resource": "https://management.core.windows.net"
							}
						}
					},
					{
						"name": "Set AS State",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "AS_Status_ActivityAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "State",
							"value": {
								"value": "@activity('AS_Status_ActivityAPI').output.properties.state",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If AS Paused",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Set AS State",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set AS SKU",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('State'),'Paused')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "AS_Resume_ActivityAPI",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://management.azure.com/subscriptions/15354be3-bb86-4045-a1a1-7bf7d9ba1c31/resourceGroups/DBRDashboard/providers/Microsoft.AnalysisServices/servers/dbrdashboard/resume?api-version=2017-08-01",
										"method": "POST",
										"headers": {},
										"body": {
											"value": "{\"Dummy\":\"Dummy\"}",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.core.windows.net"
										}
									}
								},
								{
									"name": "Wait AS Resuming",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "AS_Resume_ActivityAPI",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 300
									}
								}
							]
						}
					},
					{
						"name": "Set AS SKU",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "AS_Status_ActivityAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "SKU",
							"value": {
								"value": "@activity('AS_Status_ActivityAPI').output.sku.name",
								"type": "Expression"
							}
						}
					},
					{
						"name": "If AS not S8",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "If AS Paused",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(equals(variables('SKU'),'S9'))",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "AS_Scale_S8",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": "https://management.azure.com/subscriptions/15354be3-bb86-4045-a1a1-7bf7d9ba1c31/resourceGroups/DBRDashboard/providers/Microsoft.AnalysisServices/servers/dbrdashboard/?api-version=2017-08-01",
										"method": "PATCH",
										"headers": {},
										"body": {
											"value": "{\n   \"sku\":{\n      \"capacity\":1,\n      \"name\":\"S8\",\n      \"tier\":\"Standard\"\n   }\n}",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								},
								{
									"name": "Wait_AS_Scaling",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "AS_Scale_S8",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 300
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"State": {
						"type": "String"
					},
					"SKU": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Resource Management"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}