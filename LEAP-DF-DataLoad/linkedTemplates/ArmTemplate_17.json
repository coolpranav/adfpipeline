{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DF-To-TAS Transfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy tblLeapP3MSalesDetailByOrder",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE tblP3MSalesDetail",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BranchNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DSECode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DSECode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StoreId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "StoreId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PrdNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PrdNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "PrdNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PrdNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "InvNo",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "InvNo",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "InvDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "InvDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "Qty",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "Qty",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "NetValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "NetValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "GrossAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "GrossAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "TaxAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RETAILING",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "RETAILING",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "UPC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "UPC",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RetQty",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RetQty",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RetNetValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "RetNetValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RetGrossAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "RetGrossAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RetTaxAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "RetTaxAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RetRETAILING",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "RetRETAILING",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InvQty",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "InvQty",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "InvNetValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "InvNetValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InvGrossAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "InvGrossAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InvTaxAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "InvTaxAmt",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "InvRETAILING",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										},
										"sink": {
											"name": "InvRETAILING",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 2,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DW_tblLeapP3MSalesDetailByOrder",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TAS_tblP3MSalesDetail_Test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy tblTAS_INITSBDStoreWiseGaps",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy tblLeapP3MSalesDetailByOrder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE tblINITSBDStoreWiseGaps",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "StoreID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBDGroupID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBDGroupID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "flgBaseCode",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "flgBaseCode",
											"type": "Byte",
											"physicalType": "tinyint"
										}
									},
									{
										"source": {
											"name": "BranchNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BranchNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DW_tblTAS_INITSBDStoreWiseGaps",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TAS_tblINITSBDStoreWiseGaps_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy tblTAS_SBStoreWiseBaseDetailsActual",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy tblTAS_INITSBDStoreWiseGaps",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE tblSBStoreWiseBaseDetailsActual",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "StoreId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "StoreId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "NoOfTimesSold",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "NoOfTimesSold",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SalesValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "SalesValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "RetValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "RetValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "NetSalesValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										},
										"sink": {
											"name": "NetSalesValue",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 0,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "LastInvDate",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "LastInvDate",
											"type": "DateTime",
											"physicalType": "date"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DW_tblTAS_SBStoreWiseBaseDetailsActual",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TAS_tblSBStoreWiseBaseDetailsActual_test",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "DF-To-TAS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteAllFilesinFolder')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAllFiles",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "DS_DeletedFolder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.Containername",
										"type": "Expression"
									},
									"Folder": {
										"value": "@pipeline().parameters.Foldername",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilesFilter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetAllFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetAllFiles').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFolderFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilesFilter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilesFilter').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "DeleteFiles",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 1,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "DS_API",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Containername",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.Foldername",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Containername": {
						"type": "string"
					},
					"Foldername": {
						"type": "string"
					},
					"DataDeleteDate": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteStagingAllFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete Staging Cloud1",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_File_V2_Cloud1",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Staging Cloud2",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_File_V2_Cloud2",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Delete Staging Cloud3",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_File_V2_Cloud3",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.csv",
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": " "
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteStagingFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete Staging Files",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteStagingOneFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete Staging One File",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_File_V2",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteStagingOneFile_Cloud1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete Staging One File",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_File_V2_Cloud1",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteStagingOneFile_Cloud2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete Staging One File",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_File_V2_Cloud2",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DeleteStagingOneFile_Cloud3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Delete Staging One File-Cloud3",
						"type": "Delete",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_File_V2_Cloud3",
								"type": "DatasetReference",
								"parameters": {
									"filename": {
										"value": "@pipeline().parameters.FileName",
										"type": "Expression"
									}
								}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_CubeProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "AS_CubeProcess_Sync_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Sync_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_OnlyProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LoadLeapTasIntegration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDailyDataRefreshSalesData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IFDataTransferCanDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyDataRefreshSalesData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "IFDataTransferCanDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PopulateDSETeleCallingStores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select flgPngDataTransfer from tblFlagDataProcess",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Scale Down DB",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spOlapProcessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Scale_S4_DB]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spOlapProcessing",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spOlapProcessing]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpDailyRefreshSchemeData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyRefreshSchemeData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LoadLeapTasIntegration",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SpDailyRefreshSchemeData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-09-24T01:59:54Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_OnlyProcessing_1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDailyDataRefreshSalesData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IFDataTransferCanDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyDataRefreshSalesData]",
							"storedProcedureParameters": {
								"CalledFrom": {
									"value": "1",
									"type": "Byte"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "IFDataTransferCanDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "PopulateDSETeleCallingStores",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select flgPngDataTransfer from tblFlagDataProcess",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "TASDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Scale Down DB",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spOlapProcessing",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[Scale_S4_DB]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spOlapProcessing",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spOlapProcessing]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpDailyDataRefreshSalesData Error",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spDailyDataRefreshSalesData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "avinash@astixsolutions.com,alok@astixsolutions.com,ashwani@astixsolutions.com",
								"Subject": "Datafactory Error",
								"ErrorMessage": "SpDailyDataRefreshSalesData failed, log on to portal for more details"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-08T03:37:36Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataProcessing-Set')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList-Set1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetFiletoProcess]",
								"storedProcedureParameters": {
									"CloudInstanceNo": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.CloudInstance",
											"type": "Expression"
										}
									},
									"StepNo": {
										"type": "Byte",
										"value": {
											"value": "@pipeline().parameters.Step",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each File to process",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList-Set1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList-Set1').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Sp Called",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderQuery": {
												"value": "EXEC @{item().spname}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CloudInstance": {
						"type": "string"
					},
					"Step": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataProcessing_Cloud2_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cloud 2 Step-1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [
							{
								"name": "CloudInstance",
								"value": "1"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Step1'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CheckCompleted-Step1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpIsStepCompleted]",
											"storedProcedureParameters": {
												"CloudInstanceNo": {
													"type": "Int32",
													"value": {
														"value": "@variables('CloudInstance')",
														"type": "Expression"
													}
												},
												"StepNo": {
													"type": "Byte",
													"value": "1"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Processing Check",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckCompleted-Step1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@string(activity('CheckCompleted-Step1').output.firstRow.flgCompleted)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "1",
												"activities": [
													{
														"name": "Wait1",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													},
													{
														"name": "Cloud-Set1",
														"type": "SetVariable",
														"dependsOn": [
															{
																"activity": "Wait1",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step1",
															"value": true
														}
													}
												]
											},
											{
												"value": "2",
												"activities": [
													{
														"name": "Cloud-Set1-Done",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step1",
															"value": true
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Cloud 2 Step-2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Cloud 2 Step-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "CloudInstance",
								"value": "1"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Step2'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CheckCompleted-Step2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpIsStepCompleted]",
											"storedProcedureParameters": {
												"CloudInstanceNo": {
													"type": "Int32",
													"value": {
														"value": "@variables('CloudInstance')",
														"type": "Expression"
													}
												},
												"StepNo": {
													"type": "Byte",
													"value": "2"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Processing Check_Step2",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckCompleted-Step2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@string(activity('CheckCompleted-Step2').output.firstRow.flgCompleted)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "1",
												"activities": [
													{
														"name": "Wait1_copy1",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													},
													{
														"name": "Cloud-Set2",
														"type": "SetVariable",
														"dependsOn": [
															{
																"activity": "Wait1_copy1",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step2",
															"value": true
														}
													}
												]
											},
											{
												"value": "2",
												"activities": [
													{
														"name": "Cloud-Set2-Done",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step2",
															"value": true
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Cloud 2 Step-3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Cloud 2 Step-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "CloudInstance",
								"value": "1"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Step3'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CheckCompleted-Step3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpIsStepCompleted]",
											"storedProcedureParameters": {
												"CloudInstanceNo": {
													"type": "Int32",
													"value": {
														"value": "@variables('CloudInstance')",
														"type": "Expression"
													}
												},
												"StepNo": {
													"type": "Byte",
													"value": "3"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Processing Check_Step3",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckCompleted-Step3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@string(activity('CheckCompleted-Step3').output.firstRow.flgCompleted)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "1",
												"activities": [
													{
														"name": "Wait3",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													},
													{
														"name": "Cloud-Set3",
														"type": "SetVariable",
														"dependsOn": [
															{
																"activity": "Wait3",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step3",
															"value": true
														}
													}
												]
											},
											{
												"value": "2",
												"activities": [
													{
														"name": "Cloud-Set3-Done",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step3",
															"value": true
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Cloud 2 Step-4",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Cloud 2 Step-3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "CloudInstance",
								"value": "1"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Step4'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CheckCompleted-Step4",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpIsStepCompleted]",
											"storedProcedureParameters": {
												"CloudInstanceNo": {
													"type": "Int32",
													"value": {
														"value": "@variables('CloudInstance')",
														"type": "Expression"
													}
												},
												"StepNo": {
													"type": "Byte",
													"value": "4"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Processing Check_Step4",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckCompleted-Step4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@string(activity('CheckCompleted-Step4').output.firstRow.flgCompleted)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "1",
												"activities": [
													{
														"name": "Wait4",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													},
													{
														"name": "Cloud-Set4",
														"type": "SetVariable",
														"dependsOn": [
															{
																"activity": "Wait4",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step4",
															"value": true
														}
													}
												]
											},
											{
												"value": "2",
												"activities": [
													{
														"name": "Cloud-Set4-Done",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step4",
															"value": true
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Cloud 2 Step-5",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Cloud 2 Step-4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "CloudInstance",
								"value": "1"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Step5'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CheckCompleted-Step5",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpIsStepCompleted]",
											"storedProcedureParameters": {
												"CloudInstanceNo": {
													"type": "Int32",
													"value": {
														"value": "@variables('CloudInstance')",
														"type": "Expression"
													}
												},
												"StepNo": {
													"type": "Byte",
													"value": "5"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Processing Check_Step5",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckCompleted-Step5",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@string(activity('CheckCompleted-Step5').output.firstRow.flgCompleted)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "1",
												"activities": [
													{
														"name": "Wait5",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													},
													{
														"name": "Cloud-Set5",
														"type": "SetVariable",
														"dependsOn": [
															{
																"activity": "Wait5",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step5",
															"value": true
														}
													}
												]
											},
											{
												"value": "2",
												"activities": [
													{
														"name": "Cloud1-Set5-Done",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step5",
															"value": true
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"flgProcessingDone": {
						"type": "Boolean",
						"defaultValue": false
					},
					"CloudInstance": {
						"type": "String",
						"defaultValue": "2"
					},
					"Step1": {
						"type": "Boolean",
						"defaultValue": false
					},
					"Step2": {
						"type": "Boolean",
						"defaultValue": false
					},
					"Step3": {
						"type": "Boolean",
						"defaultValue": false
					},
					"Step4": {
						"type": "Boolean",
						"defaultValue": false
					},
					"Step5": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataProcessing_Cloud3_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cloud 3 Step-1",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [
							{
								"name": "CloudInstance",
								"value": "1"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Step1'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CheckCompleted-Step1",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpIsStepCompleted]",
											"storedProcedureParameters": {
												"CloudInstanceNo": {
													"type": "Int32",
													"value": {
														"value": "@variables('CloudInstance')",
														"type": "Expression"
													}
												},
												"StepNo": {
													"type": "Byte",
													"value": "1"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Processing Check",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckCompleted-Step1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@string(activity('CheckCompleted-Step1').output.firstRow.flgCompleted)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "1",
												"activities": [
													{
														"name": "Wait1",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													},
													{
														"name": "Cloud-Set1",
														"type": "SetVariable",
														"dependsOn": [
															{
																"activity": "Wait1",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step1",
															"value": true
														}
													}
												]
											},
											{
												"value": "2",
												"activities": [
													{
														"name": "Cloud-Set1-Done",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step1",
															"value": true
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Cloud 3 Step-2",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Cloud 3 Step-1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "CloudInstance",
								"value": "1"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Step2'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CheckCompleted-Step2",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpIsStepCompleted]",
											"storedProcedureParameters": {
												"CloudInstanceNo": {
													"type": "Int32",
													"value": {
														"value": "@variables('CloudInstance')",
														"type": "Expression"
													}
												},
												"StepNo": {
													"type": "Byte",
													"value": "2"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Processing Check_Step2",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckCompleted-Step2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@string(activity('CheckCompleted-Step2').output.firstRow.flgCompleted)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "1",
												"activities": [
													{
														"name": "Wait1_copy1",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													},
													{
														"name": "Cloud-Set2",
														"type": "SetVariable",
														"dependsOn": [
															{
																"activity": "Wait1_copy1",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step2",
															"value": true
														}
													}
												]
											},
											{
												"value": "2",
												"activities": [
													{
														"name": "Cloud-Set2-Done",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step2",
															"value": true
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Cloud 3 Step-3",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Cloud 3 Step-2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "CloudInstance",
								"value": "1"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Step3'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CheckCompleted-Step3",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpIsStepCompleted]",
											"storedProcedureParameters": {
												"CloudInstanceNo": {
													"type": "Int32",
													"value": {
														"value": "@variables('CloudInstance')",
														"type": "Expression"
													}
												},
												"StepNo": {
													"type": "Byte",
													"value": "3"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Processing Check_Step3",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckCompleted-Step3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@string(activity('CheckCompleted-Step3').output.firstRow.flgCompleted)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "1",
												"activities": [
													{
														"name": "Wait3",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													},
													{
														"name": "Cloud-Set3",
														"type": "SetVariable",
														"dependsOn": [
															{
																"activity": "Wait3",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step3",
															"value": true
														}
													}
												]
											},
											{
												"value": "2",
												"activities": [
													{
														"name": "Cloud-Set3-Done",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step3",
															"value": true
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Cloud 3 Step-4",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Cloud 3 Step-3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "CloudInstance",
								"value": "1"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Step4'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CheckCompleted-Step4",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpIsStepCompleted]",
											"storedProcedureParameters": {
												"CloudInstanceNo": {
													"type": "Int32",
													"value": {
														"value": "@variables('CloudInstance')",
														"type": "Expression"
													}
												},
												"StepNo": {
													"type": "Byte",
													"value": "4"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Processing Check_Step4",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckCompleted-Step4",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@string(activity('CheckCompleted-Step4').output.firstRow.flgCompleted)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "1",
												"activities": [
													{
														"name": "Wait4",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													},
													{
														"name": "Cloud-Set4",
														"type": "SetVariable",
														"dependsOn": [
															{
																"activity": "Wait4",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step4",
															"value": true
														}
													}
												]
											},
											{
												"value": "2",
												"activities": [
													{
														"name": "Cloud-Set4-Done",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step4",
															"value": true
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					},
					{
						"name": "Cloud 3 Step-5",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Cloud 3 Step-4",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "CloudInstance",
								"value": "1"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('Step5'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CheckCompleted-Step5",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpIsStepCompleted]",
											"storedProcedureParameters": {
												"CloudInstanceNo": {
													"type": "Int32",
													"value": {
														"value": "@variables('CloudInstance')",
														"type": "Expression"
													}
												},
												"StepNo": {
													"type": "Byte",
													"value": "5"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Processing Check_Step5",
									"type": "Switch",
									"dependsOn": [
										{
											"activity": "CheckCompleted-Step5",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@string(activity('CheckCompleted-Step5').output.firstRow.flgCompleted)",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "1",
												"activities": [
													{
														"name": "Wait5",
														"type": "Wait",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"waitTimeInSeconds": 1
														}
													},
													{
														"name": "Cloud-Set5",
														"type": "SetVariable",
														"dependsOn": [
															{
																"activity": "Wait5",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step5",
															"value": true
														}
													}
												]
											},
											{
												"value": "2",
												"activities": [
													{
														"name": "Cloud1-Set5-Done",
														"type": "SetVariable",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"variableName": "Step5",
															"value": true
														}
													}
												]
											}
										]
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"flgProcessingDone": {
						"type": "Boolean",
						"defaultValue": false
					},
					"CloudInstance": {
						"type": "String",
						"defaultValue": "3"
					},
					"Step1": {
						"type": "Boolean",
						"defaultValue": false
					},
					"Step2": {
						"type": "Boolean",
						"defaultValue": false
					},
					"Step3": {
						"type": "Boolean",
						"defaultValue": false
					},
					"Step4": {
						"type": "Boolean",
						"defaultValue": false
					},
					"Step5": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadFile-ADLS-To-DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "LoadFile-ADLS-To-DB",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "/2021/09/07/",
										"type": "Expression"
									},
									"directory": "cntleap"
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "DPSR_MOR_Cloud1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DPSR_MOR_cloud01_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DPSR_MOR_Cloud01",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "Lastmodifieddatetime",
																"value": {
																	"value": "@activity('GetFileList').output.lastModified",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFolderPath": {
																"value": "2021/09/07",
																"type": "Expression"
															},
															"wildcardFileName": "DPSR_MOR_cloud01_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "document_no",
																	"type": "String"
																},
																"sink": {
																	"name": "document_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "apply_to_doc",
																	"type": "String"
																},
																"sink": {
																	"name": "apply_to_doc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "document_date",
																	"type": "String"
																},
																"sink": {
																	"name": "document_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "transaction_type",
																	"type": "String"
																},
																"sink": {
																	"name": "transaction_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "subbrandform_name",
																	"type": "String"
																},
																"sink": {
																	"name": "subbrandform_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "prod_name",
																	"type": "String"
																},
																"sink": {
																	"name": "prod_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_name",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_code",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel_description",
																	"type": "String"
																},
																"sink": {
																	"name": "channel_description",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse",
																	"type": "String"
																},
																"sink": {
																	"name": "dse",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "pcode",
																	"type": "String"
																},
																"sink": {
																	"name": "pcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_type",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "hsn_code",
																	"type": "String"
																},
																"sink": {
																	"name": "hsn_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "category",
																	"type": "String"
																},
																"sink": {
																	"name": "category",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brand",
																	"type": "String"
																},
																"sink": {
																	"name": "brand",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brandform",
																	"type": "String"
																},
																"sink": {
																	"name": "brandform",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "quantity",
																	"type": "String"
																},
																"sink": {
																	"name": "quantity",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_value",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_value",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "discount",
																	"type": "String"
																},
																"sink": {
																	"name": "discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "taxable_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "taxable_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_desc",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_desc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "vendor",
																	"type": "String"
																},
																"sink": {
																	"name": "vendor",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "net_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "net_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_discount",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_in_rlp",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_in_rlp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailing",
																	"type": "String"
																},
																"sink": {
																	"name": "retailing",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_in_slp",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_in_slp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "po_no",
																	"type": "String"
																},
																"sink": {
																	"name": "po_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse_code",
																	"type": "String"
																},
																"sink": {
																	"name": "dse_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "msu",
																	"type": "String"
																},
																"sink": {
																	"name": "msu",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "reason",
																	"type": "String"
																},
																"sink": {
																	"name": "reason",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "distributor_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dist_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailer_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "ret_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "srn_ref_no",
																	"type": "String"
																},
																"sink": {
																	"name": "srn_ref_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "composite",
																	"type": "String"
																},
																"sink": {
																	"name": "composite",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_code",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_name",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "order_mode",
																	"type": "String"
																},
																"sink": {
																	"name": "order_mode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_name",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lastmodifieddatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "batch",
																	"type": "String"
																},
																"sink": {
																	"name": "batch",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "upc",
																	"type": "String"
																},
																"sink": {
																	"name": "upc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "remarks",
																	"type": "String"
																},
																"sink": {
																	"name": "remarks",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_gst_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_expiry_date",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_expiry_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "irn_no",
																	"type": "String"
																},
																"sink": {
																	"name": "irn_no",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "ADLSCSVDataSource_Folder",
														"type": "DatasetReference",
														"parameters": {
															"Container": "cntleap",
															"Directory": {
																"value": "/2021/09/07/",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DPSR_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								},
								{
									"name": "DPSR_MOR_Cloud2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "DPSR_MOR_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DPSR_MOR_cloud02_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DPSR_MOR_Cloud02",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "Lastmodifieddatetime",
																"value": {
																	"value": "@activity('GetFileList').output.lastModified",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFolderPath": {
																"value": "2021/09/07",
																"type": "Expression"
															},
															"wildcardFileName": "DPSR_MOR_cloud02_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "document_no",
																	"type": "String"
																},
																"sink": {
																	"name": "document_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "apply_to_doc",
																	"type": "String"
																},
																"sink": {
																	"name": "apply_to_doc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "document_date",
																	"type": "String"
																},
																"sink": {
																	"name": "document_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "transaction_type",
																	"type": "String"
																},
																"sink": {
																	"name": "transaction_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "subbrandform_name",
																	"type": "String"
																},
																"sink": {
																	"name": "subbrandform_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "prod_name",
																	"type": "String"
																},
																"sink": {
																	"name": "prod_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_name",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_code",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel_description",
																	"type": "String"
																},
																"sink": {
																	"name": "channel_description",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse",
																	"type": "String"
																},
																"sink": {
																	"name": "dse",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "pcode",
																	"type": "String"
																},
																"sink": {
																	"name": "pcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_type",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "hsn_code",
																	"type": "String"
																},
																"sink": {
																	"name": "hsn_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "category",
																	"type": "String"
																},
																"sink": {
																	"name": "category",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brand",
																	"type": "String"
																},
																"sink": {
																	"name": "brand",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brandform",
																	"type": "String"
																},
																"sink": {
																	"name": "brandform",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "quantity",
																	"type": "String"
																},
																"sink": {
																	"name": "quantity",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_value",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_value",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "discount",
																	"type": "String"
																},
																"sink": {
																	"name": "discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "taxable_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "taxable_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_desc",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_desc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "vendor",
																	"type": "String"
																},
																"sink": {
																	"name": "vendor",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "net_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "net_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_discount",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_in_rlp",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_in_rlp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailing",
																	"type": "String"
																},
																"sink": {
																	"name": "retailing",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_in_slp",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_in_slp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "po_no",
																	"type": "String"
																},
																"sink": {
																	"name": "po_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse_code",
																	"type": "String"
																},
																"sink": {
																	"name": "dse_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "msu",
																	"type": "String"
																},
																"sink": {
																	"name": "msu",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "reason",
																	"type": "String"
																},
																"sink": {
																	"name": "reason",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "distributor_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dist_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailer_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "ret_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "srn_ref_no",
																	"type": "String"
																},
																"sink": {
																	"name": "srn_ref_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "composite",
																	"type": "String"
																},
																"sink": {
																	"name": "composite",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_code",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_name",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "order_mode",
																	"type": "String"
																},
																"sink": {
																	"name": "order_mode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_name",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lastmodifieddatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "batch",
																	"type": "String"
																},
																"sink": {
																	"name": "batch",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "upc",
																	"type": "String"
																},
																"sink": {
																	"name": "upc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "remarks",
																	"type": "String"
																},
																"sink": {
																	"name": "remarks",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_gst_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_expiry_date",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_expiry_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "irn_no",
																	"type": "String"
																},
																"sink": {
																	"name": "irn_no",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "ADLSCSVDataSource_Folder",
														"type": "DatasetReference",
														"parameters": {
															"Container": "cntleap",
															"Directory": {
																"value": "/2021/09/07/",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DPSR_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								},
								{
									"name": "DPSR_MOR_Cloud3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "DPSR_MOR_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DPSR_MOR_cloud03_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DPSR_MOR_Cloud03",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "Lastmodifieddatetime",
																"value": {
																	"value": "@activity('GetFileList').output.lastModified",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFolderPath": {
																"value": "2021/09/07",
																"type": "Expression"
															},
															"wildcardFileName": "DPSR_MOR_cloud03_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "AzureSqlSink"
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "document_no",
																	"type": "String"
																},
																"sink": {
																	"name": "document_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "apply_to_doc",
																	"type": "String"
																},
																"sink": {
																	"name": "apply_to_doc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "document_date",
																	"type": "String"
																},
																"sink": {
																	"name": "document_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "transaction_type",
																	"type": "String"
																},
																"sink": {
																	"name": "transaction_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "subbrandform_name",
																	"type": "String"
																},
																"sink": {
																	"name": "subbrandform_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "prod_name",
																	"type": "String"
																},
																"sink": {
																	"name": "prod_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_name",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_code",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel_description",
																	"type": "String"
																},
																"sink": {
																	"name": "channel_description",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse",
																	"type": "String"
																},
																"sink": {
																	"name": "dse",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "pcode",
																	"type": "String"
																},
																"sink": {
																	"name": "pcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "customer_type",
																	"type": "String"
																},
																"sink": {
																	"name": "customer_type",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "hsn_code",
																	"type": "String"
																},
																"sink": {
																	"name": "hsn_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "category",
																	"type": "String"
																},
																"sink": {
																	"name": "category",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brand",
																	"type": "String"
																},
																"sink": {
																	"name": "brand",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "brandform",
																	"type": "String"
																},
																"sink": {
																	"name": "brandform",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "quantity",
																	"type": "String"
																},
																"sink": {
																	"name": "quantity",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_value",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_value",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "discount",
																	"type": "String"
																},
																"sink": {
																	"name": "discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "taxable_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "taxable_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "mracc_desc",
																	"type": "String"
																},
																"sink": {
																	"name": "mracc_desc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "vendor",
																	"type": "String"
																},
																"sink": {
																	"name": "vendor",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "net_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "net_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_discount",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_discount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_on_scheme",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_on_scheme",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tax_in_rlp",
																	"type": "String"
																},
																"sink": {
																	"name": "tax_in_rlp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailing",
																	"type": "String"
																},
																"sink": {
																	"name": "retailing",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "gross_in_slp",
																	"type": "String"
																},
																"sink": {
																	"name": "gross_in_slp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "po_no",
																	"type": "String"
																},
																"sink": {
																	"name": "po_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dse_code",
																	"type": "String"
																},
																"sink": {
																	"name": "dse_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "msu",
																	"type": "String"
																},
																"sink": {
																	"name": "msu",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "reason",
																	"type": "String"
																},
																"sink": {
																	"name": "reason",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "distributor_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dist_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailer_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "ret_gstinno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "srn_ref_no",
																	"type": "String"
																},
																"sink": {
																	"name": "srn_ref_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "composite",
																	"type": "String"
																},
																"sink": {
																	"name": "composite",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sgst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "sgsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "igst_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "igsttax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "cess_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "cesstax_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_code",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_name",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "order_mode",
																	"type": "String"
																},
																"sink": {
																	"name": "order_mode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_code",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tc_name",
																	"type": "String"
																},
																"sink": {
																	"name": "tc_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lastmodifieddatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "batch",
																	"type": "String"
																},
																"sink": {
																	"name": "batch",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "upc",
																	"type": "String"
																},
																"sink": {
																	"name": "upc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_amount",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_amount",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "remarks",
																	"type": "String"
																},
																"sink": {
																	"name": "remarks",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "tcs_rate",
																	"type": "String"
																},
																"sink": {
																	"name": "tcs_rate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branch_gst_no",
																	"type": "String"
																},
																"sink": {
																	"name": "branch_gst_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_no",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_no",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dl_expiry_date",
																	"type": "String"
																},
																"sink": {
																	"name": "dl_expiry_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "irn_no",
																	"type": "String"
																},
																"sink": {
																	"name": "irn_no",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "ADLSCSVDataSource_Folder",
														"type": "DatasetReference",
														"parameters": {
															"Container": "cntleap",
															"Directory": {
																"value": "/2021/09/07/",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DPSR_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadFile-ADLS-To-DB_DPSR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "LoadFile-ADLS-To-DB",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset_Copy",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.Folder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "DRCP_Could1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud01_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DRCP_Cloud1",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "Lastmodifieddatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "DRCP_cloud01_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lastmodifieddatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "ADLSCSVDataSource_Folder",
														"type": "DatasetReference",
														"parameters": {
															"Container": {
																"value": "@pipeline().parameters.Container",
																"type": "Expression"
															},
															"Directory": {
																"value": "@pipeline().parameters.Folder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								},
								{
									"name": "DRCP_Could2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "DRCP_Could1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud02_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DRCP_Cloud2",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "Lastmodifieddatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "DRCP_cloud02_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lastmodifieddatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "ADLSCSVDataSource_Folder",
														"type": "DatasetReference",
														"parameters": {
															"Container": {
																"value": "@pipeline().parameters.Container",
																"type": "Expression"
															},
															"Directory": {
																"value": "@pipeline().parameters.Folder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								},
								{
									"name": "DRCP_Could3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "DRCP_Could2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud03_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DRCP_Cloud3",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "Lastmodifieddatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "DRCP_cloud03_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lastmodifieddatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "ADLSCSVDataSource_Folder",
														"type": "DatasetReference",
														"parameters": {
															"Container": {
																"value": "@pipeline().parameters.Container",
																"type": "Expression"
															},
															"Directory": {
																"value": "@pipeline().parameters.Folder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadFile-ADLS-To-DB_DRCP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "LoadFile-ADLS-To-DB",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset_Copy",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.Folder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "DRCP_Could1",
									"type": "IfCondition",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud01_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DRCP_Cloud1",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "Lastmodifieddatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "DRCP_cloud01_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lastmodifieddatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "ADLSCSVDataSource_Folder",
														"type": "DatasetReference",
														"parameters": {
															"Container": {
																"value": "@pipeline().parameters.Container",
																"type": "Expression"
															},
															"Directory": {
																"value": "@pipeline().parameters.Folder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								},
								{
									"name": "DRCP_Could2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "DRCP_Could1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud02_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DRCP_Cloud2",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "Lastmodifieddatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "DRCP_cloud02_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lastmodifieddatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "ADLSCSVDataSource_Folder",
														"type": "DatasetReference",
														"parameters": {
															"Container": {
																"value": "@pipeline().parameters.Container",
																"type": "Expression"
															},
															"Directory": {
																"value": "@pipeline().parameters.Folder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								},
								{
									"name": "DRCP_Could3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "DRCP_Could2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@bool(startswith(item().name,'DRCP_cloud03_'))",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "DRCP_Cloud3",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "Lastmodifieddatetime",
																"value": {
																	"value": "@addminutes(utcnow(),330)",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "DRCP_cloud03_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "branchcode",
																	"type": "String"
																},
																"sink": {
																	"name": "branchcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "branchname",
																	"type": "String"
																},
																"sink": {
																	"name": "branchname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercode",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailername",
																	"type": "String"
																},
																"sink": {
																	"name": "retailername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retaileraddress",
																	"type": "String"
																},
																"sink": {
																	"name": "retaileraddress",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "retailercontact",
																	"type": "String"
																},
																"sink": {
																	"name": "retailercontact",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "stlname",
																	"type": "String"
																},
																"sink": {
																	"name": "stlname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsecode",
																	"type": "String"
																},
																"sink": {
																	"name": "dsecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "dsename",
																	"type": "String"
																},
																"sink": {
																	"name": "dsename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channel",
																	"type": "String"
																},
																"sink": {
																	"name": "channel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeltype",
																	"type": "String"
																},
																"sink": {
																	"name": "channeltype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "channeldescription",
																	"type": "String"
																},
																"sink": {
																	"name": "channeldescription",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routecode",
																	"type": "String"
																},
																"sink": {
																	"name": "routecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "routename",
																	"type": "String"
																},
																"sink": {
																	"name": "routename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "sectorname",
																	"type": "String"
																},
																"sink": {
																	"name": "sectorname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "latitude",
																	"type": "String"
																},
																"sink": {
																	"name": "latitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "longitude",
																	"type": "String"
																},
																"sink": {
																	"name": "longitude",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "visit_date",
																	"type": "String"
																},
																"sink": {
																	"name": "visit_date",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "Filename",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lastmodifieddatetime",
																	"type": "String"
																},
																"sink": {
																	"name": "LastModifiedDatetime",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "ADLSCSVDataSource_Folder",
														"type": "DatasetReference",
														"parameters": {
															"Container": {
																"value": "@pipeline().parameters.Container",
																"type": "Expression"
															},
															"Directory": {
																"value": "@pipeline().parameters.Folder",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DRCP_table",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MasterDataForAPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy SalesHierarchy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "Select DISTINCT DbrNodeID,DbrNodeType,DbrCode,DbrName,BrnNodeID,BrnNOdeType,BranchCode,SubDNodeID,SubDNodeType,SubDCode\nFROM vwSalesHierarchyUptoSUBD WHERE DbrName <> 'Unknown'\nUNION\nSelect DISTINCT DbrNodeID,DbrNodeType,DbrCode,DbrName,BrnNodeID,BrnNOdeType,BranchCode,NULL,NULL,NULL\nFROM vwSalesHierarchy WHERE DbrName <> 'Unknown'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE SalesHierarchyUptoSUBD",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DbrNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DbrNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DbrNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DbrNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DbrCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DbrCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DbrName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DbrName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BrnNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrnNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrnNOdeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrnNOdeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SubDNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubDNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SubDNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubDNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SubDCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubDCode",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DF_NC_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_API_DBRList",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "API"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-Staging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSBinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDataDestination1",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteAFile",
									"description": "Delete a file from the source store",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyAFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSBinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-Staging_V2_ZipIssue')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud1_Files",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud1').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyFile_Cloud1",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud1",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles_Cloud1",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),contains(item().name,'cloud01'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterFiles_Cloud2",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),contains(item().name,'cloud02'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud2_Files",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud2').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyFile_Cloud2",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud2",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles_Cloud3",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),contains(item().name,'cloud03'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud3_Files",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud3').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyFile_Cloud3",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud3",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		}
	]
}