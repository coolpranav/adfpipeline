{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/MasterDataForAPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy SalesHierarchy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "Select DISTINCT DbrNodeID,DbrNodeType,DbrCode,DbrName,BrnNodeID,BrnNOdeType,BranchCode,SubDNodeID,SubDNodeType,SubDCode\nFROM vwSalesHierarchyUptoSUBD WHERE DbrName <> 'Unknown'\nUNION\nSelect DISTINCT DbrNodeID,DbrNodeType,DbrCode,DbrName,BrnNodeID,BrnNOdeType,BranchCode,NULL,NULL,NULL\nFROM vwSalesHierarchy WHERE DbrName <> 'Unknown'\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE SalesHierarchyUptoSUBD",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DbrNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DbrNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DbrNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DbrNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DbrCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DbrCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DbrName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DbrName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BrnNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrnNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrnNOdeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrnNOdeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BranchCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SubDNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubDNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SubDNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SubDNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SubDCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SubDCode",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_DF_NC_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_API_DBRList",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "API"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-Staging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSBinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDataDestination1",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteAFile",
									"description": "Delete a file from the source store",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyAFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ADLSBinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-Staging_V2_ZipIssue')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud1_Files",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud1').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyFile_Cloud1",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud1",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles_Cloud1",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),contains(item().name,'cloud01'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FilterFiles_Cloud2",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),contains(item().name,'cloud02'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud2_Files",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud2').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyFile_Cloud2",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud2",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles_Cloud3",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@and(equals(item().type, 'File'),contains(item().name,'cloud03'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile_Cloud3_Files",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles_Cloud3').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyFile_Cloud3",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSDataset_Onefile",
											"type": "DatasetReference",
											"parameters": {
												"folder": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"directory": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud3",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation_Level4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFilename",
						"description": "Iterate each file ",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": "INVVAL*",
												"deleteFilesAfterCompletion": false
											},
											"formatSettings": {
												"type": "BinaryReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "ADLSBinaryDataSource_File",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_dfdatafoundation",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveFiles_Staging-to-Staging')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BinaryDataSource_Folder2",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Location",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"batchCount": 20,
							"activities": [
								{
									"name": "CopyAFile",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BinarySource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true
											},
											"recursive": false
										},
										"sink": {
											"type": "BinarySink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											}
										},
										"enableStaging": false,
										"preserve": [
											"Attributes"
										],
										"validateDataConsistency": false,
										"dataIntegrationUnits": 0
									},
									"inputs": [
										{
											"referenceName": "BinaryDataSource_File2",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "BinaryDataDestination2",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.DestinationStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.DestinationStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "DeleteAFile",
									"description": "Delete a file from the source store",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "CopyAFile",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "BinaryDataSource_File2",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.SourceStore_Location",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.SourceStore_Directory",
													"type": "Expression"
												},
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Location": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Location": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:00Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PnGExternalDataCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"maxRowsPerFile": 1000000,
									"fileNamePrefix": "DBR",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "tmpDataForrakesh_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tmpDataForrakesh_File",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PnGExternalData"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Productmasterprocessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spDataLoadRawProductMaster",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadRawProductMaster]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "producthierarchycopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "spDataLoadRawProductMaster",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE tmpTransferProductHierarchy",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LEHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LEHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LENodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LENodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LENodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "LENodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "LE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LE",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CatHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CatNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CatNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CatNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BrandHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrandHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrandNodeID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrandNodeID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BrandNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BrandNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Brand",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Brand",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BFHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BFNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "BFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "BF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "BFCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "BFCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SBFHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SBFNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SBFCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBFCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SBF",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SBF",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SKUHierId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SKUHierId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SKUNodeId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SKUNodeId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SKUNodeType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SKUNodeType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "SKUCode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SKUCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SKU",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SKU",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MRP",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "MRP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "PcsInBox",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "PcsInBox",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "RLP",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "RLP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "DLP",
											"type": "Decimal",
											"physicalType": "decimal"
										},
										"sink": {
											"name": "DLP",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "SAPUPC",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "SAPUPC",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ProdHierarchy_DF",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ProdHierarchy_TAS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "spTransferProductMaster",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "producthierarchycopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTransferProductMaster]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-08-24T12:52:49Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RetailerFlagUpdate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "tbltmpGTMModel",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "spPopulateStoreListWithTownType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tbltmpGTMModel",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "PolybaseLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BranchCode",
											"type": "String"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StoreCode",
											"type": "String"
										},
										"sink": {
											"name": "StoreCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Frequency",
											"type": "String"
										},
										"sink": {
											"name": "Frequency",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "StoreId",
											"type": "Int32"
										},
										"sink": {
											"name": "StoreId",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_TAS_tbltmpGTMModel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_tbltmpGTMModel",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "tbltmpRurbanSplit",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tbltmpTASSellerType",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tbltmpRurbanSplit",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "PolybaseLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BranchCode",
											"type": "String"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubDCode",
											"type": "String"
										},
										"sink": {
											"name": "SubDCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StoreCode",
											"type": "String"
										},
										"sink": {
											"name": "StoreCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "flgTownType",
											"type": "Byte"
										},
										"sink": {
											"name": "flgTownType",
											"type": "Byte"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Maximus_tbltmpRurbanSplit",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_tbltmpRurbanSplit",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "spUpdateRetailerflags",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "tbltmpRurbanSplit",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateRetailerflags]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateStoreListWithTownType",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateStoreListWithTownType]"
						},
						"linkedServiceName": {
							"referenceName": "MaximusDBLink",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "tbltmpTASSellerType",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "tbltmpGTMModel",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tbltmpTASSellerType",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "PolybaseLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "BranchCode",
											"type": "String"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SUBDCode",
											"type": "String"
										},
										"sink": {
											"name": "SUBDCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StoreCode",
											"type": "String"
										},
										"sink": {
											"name": "StoreCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvCode",
											"type": "String"
										},
										"sink": {
											"name": "InvCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "SellerType",
											"type": "String"
										},
										"sink": {
											"name": "SellerType",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_TAS_tbltmpTASSellerType",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_tbltmpTASSellerType",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "spUpdateTASSellerType",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spUpdateRetailerflags",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spUpdateTASSellerType]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Additional Process"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleFileCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset_Copy",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.Folder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'DPSR_MOR')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DPSR",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "Lastmodifieddatetime",
													"value": {
														"value": "@addminutes(utcnow(),330)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat('/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'), '/')",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "document_no",
														"type": "String"
													},
													"sink": {
														"name": "document_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "apply_to_doc",
														"type": "String"
													},
													"sink": {
														"name": "apply_to_doc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "document_date",
														"type": "String"
													},
													"sink": {
														"name": "document_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "transaction_type",
														"type": "String"
													},
													"sink": {
														"name": "transaction_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "subbrandform_name",
														"type": "String"
													},
													"sink": {
														"name": "subbrandform_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "prod_name",
														"type": "String"
													},
													"sink": {
														"name": "prod_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_name",
														"type": "String"
													},
													"sink": {
														"name": "customer_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_code",
														"type": "String"
													},
													"sink": {
														"name": "customer_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "channel_description",
														"type": "String"
													},
													"sink": {
														"name": "channel_description",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse",
														"type": "String"
													},
													"sink": {
														"name": "dse",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "pcode",
														"type": "String"
													},
													"sink": {
														"name": "pcode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_type",
														"type": "String"
													},
													"sink": {
														"name": "customer_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "hsn_code",
														"type": "String"
													},
													"sink": {
														"name": "hsn_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "category",
														"type": "String"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brand",
														"type": "String"
													},
													"sink": {
														"name": "brand",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brandform",
														"type": "String"
													},
													"sink": {
														"name": "brandform",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "quantity",
														"type": "String"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_value",
														"type": "String"
													},
													"sink": {
														"name": "gross_value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "discount",
														"type": "String"
													},
													"sink": {
														"name": "discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "taxable_scheme",
														"type": "String"
													},
													"sink": {
														"name": "taxable_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_amount",
														"type": "String"
													},
													"sink": {
														"name": "igsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_amount",
														"type": "String"
													},
													"sink": {
														"name": "cesstax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_code",
														"type": "String"
													},
													"sink": {
														"name": "mracc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_desc",
														"type": "String"
													},
													"sink": {
														"name": "mracc_desc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "vendor",
														"type": "String"
													},
													"sink": {
														"name": "vendor",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "net_amount",
														"type": "String"
													},
													"sink": {
														"name": "net_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_discount",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_scheme",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_in_rlp",
														"type": "String"
													},
													"sink": {
														"name": "tax_in_rlp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailing",
														"type": "String"
													},
													"sink": {
														"name": "retailing",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_in_slp",
														"type": "String"
													},
													"sink": {
														"name": "gross_in_slp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "po_no",
														"type": "String"
													},
													"sink": {
														"name": "po_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse_code",
														"type": "String"
													},
													"sink": {
														"name": "dse_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "msu",
														"type": "String"
													},
													"sink": {
														"name": "msu",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reason",
														"type": "String"
													},
													"sink": {
														"name": "reason",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "distributor_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "dist_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailer_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "ret_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "srn_ref_no",
														"type": "String"
													},
													"sink": {
														"name": "srn_ref_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "composite",
														"type": "String"
													},
													"sink": {
														"name": "composite",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_rate",
														"type": "String"
													},
													"sink": {
														"name": "igsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_rate",
														"type": "String"
													},
													"sink": {
														"name": "cesstax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_code",
														"type": "String"
													},
													"sink": {
														"name": "branch_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_name",
														"type": "String"
													},
													"sink": {
														"name": "branch_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "order_mode",
														"type": "String"
													},
													"sink": {
														"name": "order_mode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_code",
														"type": "String"
													},
													"sink": {
														"name": "tc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_name",
														"type": "String"
													},
													"sink": {
														"name": "tc_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Filename",
														"type": "String"
													},
													"sink": {
														"name": "Filename",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Lastmodifieddatetime",
														"type": "String"
													},
													"sink": {
														"name": "LastModifiedDatetime",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "batch",
														"type": "String"
													},
													"sink": {
														"name": "batch",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "upc",
														"type": "String"
													},
													"sink": {
														"name": "upc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_amount",
														"type": "String"
													},
													"sink": {
														"name": "tcs_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "remarks",
														"type": "String"
													},
													"sink": {
														"name": "remarks",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_rate",
														"type": "String"
													},
													"sink": {
														"name": "tcs_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "branch_gst_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_no",
														"type": "String"
													},
													"sink": {
														"name": "dl_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_expiry_date",
														"type": "String"
													},
													"sink": {
														"name": "dl_expiry_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "irn_no",
														"type": "String"
													},
													"sink": {
														"name": "irn_no",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSCSVDataSource_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@concat('/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'), '/')\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DPSR_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					},
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleFileCopy_CCCR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset_Copy",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.Folder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith(item().name,'CCCR')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CCCR",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "Lastmodifieddatetime",
													"value": {
														"value": "@addminutes(utcnow(),330)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat('/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'), '/')",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "branch_code",
														"type": "String"
													},
													"sink": {
														"name": "branch_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_location",
														"type": "String"
													},
													"sink": {
														"name": "branch_location",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse_code",
														"type": "String"
													},
													"sink": {
														"name": "dse_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse_name",
														"type": "String"
													},
													"sink": {
														"name": "dse_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "date",
														"type": "String"
													},
													"sink": {
														"name": "date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "route_name",
														"type": "String"
													},
													"sink": {
														"name": "route_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailer_code",
														"type": "String"
													},
													"sink": {
														"name": "retailer_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailer_name",
														"type": "String"
													},
													"sink": {
														"name": "retailer_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "contact_number_1",
														"type": "String"
													},
													"sink": {
														"name": "contact_number_1",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "contact_number_2",
														"type": "String"
													},
													"sink": {
														"name": "contact_number_2",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "channel_name",
														"type": "String"
													},
													"sink": {
														"name": "channel_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sub_channel_name",
														"type": "String"
													},
													"sink": {
														"name": "sub_channel_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "start_time",
														"type": "String"
													},
													"sink": {
														"name": "start_time",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "end_time",
														"type": "String"
													},
													"sink": {
														"name": "end_time",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "intime",
														"type": "String"
													},
													"sink": {
														"name": "intime",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "order_value",
														"type": "String"
													},
													"sink": {
														"name": "order_value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "productivity",
														"type": "String"
													},
													"sink": {
														"name": "productivity",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reason",
														"type": "String"
													},
													"sink": {
														"name": "reason",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "visit_latitude",
														"type": "String"
													},
													"sink": {
														"name": "visit_latitude",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "visit_longitude",
														"type": "String"
													},
													"sink": {
														"name": "visit_longitude",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "deviation_in_meter",
														"type": "String"
													},
													"sink": {
														"name": "deviation_in_meter",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "deviation",
														"type": "String"
													},
													"sink": {
														"name": "deviation",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reason_for_deviation",
														"type": "String"
													},
													"sink": {
														"name": "reason_for_deviation",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "on_route",
														"type": "String"
													},
													"sink": {
														"name": "on_route",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "remarks",
														"type": "String"
													},
													"sink": {
														"name": "remarks",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Lastmodifieddatetime",
														"type": "String"
													},
													"sink": {
														"name": "LastModifiedDatetime",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Filename",
														"type": "String"
													},
													"sink": {
														"name": "Filename",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSCSVDataSource_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@concat('/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'), '/')\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_CCCR_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					},
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleFileCopy_Onefile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset_Copy",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.Folder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DPSR",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "Lastmodifieddatetime",
													"value": {
														"value": "@addminutes(utcnow(),330)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@pipeline().parameters.Folder",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "document_no",
														"type": "String"
													},
													"sink": {
														"name": "document_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "apply_to_doc",
														"type": "String"
													},
													"sink": {
														"name": "apply_to_doc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "document_date",
														"type": "String"
													},
													"sink": {
														"name": "document_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "transaction_type",
														"type": "String"
													},
													"sink": {
														"name": "transaction_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "subbrandform_name",
														"type": "String"
													},
													"sink": {
														"name": "subbrandform_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "prod_name",
														"type": "String"
													},
													"sink": {
														"name": "prod_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_name",
														"type": "String"
													},
													"sink": {
														"name": "customer_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_code",
														"type": "String"
													},
													"sink": {
														"name": "customer_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "channel_description",
														"type": "String"
													},
													"sink": {
														"name": "channel_description",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse",
														"type": "String"
													},
													"sink": {
														"name": "dse",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "pcode",
														"type": "String"
													},
													"sink": {
														"name": "pcode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_type",
														"type": "String"
													},
													"sink": {
														"name": "customer_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "hsn_code",
														"type": "String"
													},
													"sink": {
														"name": "hsn_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "category",
														"type": "String"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brand",
														"type": "String"
													},
													"sink": {
														"name": "brand",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brandform",
														"type": "String"
													},
													"sink": {
														"name": "brandform",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "quantity",
														"type": "String"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_value",
														"type": "String"
													},
													"sink": {
														"name": "gross_value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "discount",
														"type": "String"
													},
													"sink": {
														"name": "discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "taxable_scheme",
														"type": "String"
													},
													"sink": {
														"name": "taxable_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_amount",
														"type": "String"
													},
													"sink": {
														"name": "igsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_amount",
														"type": "String"
													},
													"sink": {
														"name": "cesstax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_code",
														"type": "String"
													},
													"sink": {
														"name": "mracc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_desc",
														"type": "String"
													},
													"sink": {
														"name": "mracc_desc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "vendor",
														"type": "String"
													},
													"sink": {
														"name": "vendor",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "net_amount",
														"type": "String"
													},
													"sink": {
														"name": "net_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_discount",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_scheme",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_in_rlp",
														"type": "String"
													},
													"sink": {
														"name": "tax_in_rlp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailing",
														"type": "String"
													},
													"sink": {
														"name": "retailing",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_in_slp",
														"type": "String"
													},
													"sink": {
														"name": "gross_in_slp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "po_no",
														"type": "String"
													},
													"sink": {
														"name": "po_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse_code",
														"type": "String"
													},
													"sink": {
														"name": "dse_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "msu",
														"type": "String"
													},
													"sink": {
														"name": "msu",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reason",
														"type": "String"
													},
													"sink": {
														"name": "reason",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "distributor_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "dist_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailer_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "ret_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "srn_ref_no",
														"type": "String"
													},
													"sink": {
														"name": "srn_ref_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "composite",
														"type": "String"
													},
													"sink": {
														"name": "composite",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_rate",
														"type": "String"
													},
													"sink": {
														"name": "igsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_rate",
														"type": "String"
													},
													"sink": {
														"name": "cesstax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_code",
														"type": "String"
													},
													"sink": {
														"name": "branch_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_name",
														"type": "String"
													},
													"sink": {
														"name": "branch_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "order_mode",
														"type": "String"
													},
													"sink": {
														"name": "order_mode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_code",
														"type": "String"
													},
													"sink": {
														"name": "tc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_name",
														"type": "String"
													},
													"sink": {
														"name": "tc_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Filename",
														"type": "String"
													},
													"sink": {
														"name": "Filename",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Lastmodifieddatetime",
														"type": "String"
													},
													"sink": {
														"name": "LastModifiedDatetime",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "batch",
														"type": "String"
													},
													"sink": {
														"name": "batch",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "upc",
														"type": "String"
													},
													"sink": {
														"name": "upc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_amount",
														"type": "String"
													},
													"sink": {
														"name": "tcs_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "remarks",
														"type": "String"
													},
													"sink": {
														"name": "remarks",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_rate",
														"type": "String"
													},
													"sink": {
														"name": "tcs_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "branch_gst_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_no",
														"type": "String"
													},
													"sink": {
														"name": "dl_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_expiry_date",
														"type": "String"
													},
													"sink": {
														"name": "dl_expiry_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "irn_no",
														"type": "String"
													},
													"sink": {
														"name": "irn_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "apply_to_doc_date",
														"type": "String"
													},
													"sink": {
														"name": "apply_to_doc_date",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSCSVDataSource_Folder_WithComma",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@pipeline().parameters.Folder",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DPSR_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					},
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleFileCopy_RTDXFormat')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSDataset_Copy",
								"type": "DatasetReference",
								"parameters": {
									"folder": {
										"value": "@pipeline().parameters.Folder",
										"type": "Expression"
									},
									"directory": {
										"value": "@pipeline().parameters.Container",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DPSR",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "Lastmodifieddatetime",
													"value": {
														"value": "@addminutes(utcnow(),330)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat('Site PSR Data/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'),formatDateTime(pipeline().parameters.ProcessDate, 'MM'),formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/')",
													"type": "Expression"
												},
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "document_no",
														"type": "String"
													},
													"sink": {
														"name": "document_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "apply_to_doc",
														"type": "String"
													},
													"sink": {
														"name": "apply_to_doc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "document_date",
														"type": "String"
													},
													"sink": {
														"name": "document_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "transaction_type",
														"type": "String"
													},
													"sink": {
														"name": "transaction_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "subbrandform_name",
														"type": "String"
													},
													"sink": {
														"name": "subbrandform_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "prod_name",
														"type": "String"
													},
													"sink": {
														"name": "prod_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_name",
														"type": "String"
													},
													"sink": {
														"name": "customer_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_code",
														"type": "String"
													},
													"sink": {
														"name": "customer_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "channel_description",
														"type": "String"
													},
													"sink": {
														"name": "channel_description",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse",
														"type": "String"
													},
													"sink": {
														"name": "dse",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "pcode",
														"type": "String"
													},
													"sink": {
														"name": "pcode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "customer_type",
														"type": "String"
													},
													"sink": {
														"name": "customer_type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "hsn_code",
														"type": "String"
													},
													"sink": {
														"name": "hsn_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "category",
														"type": "String"
													},
													"sink": {
														"name": "category",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brand",
														"type": "String"
													},
													"sink": {
														"name": "brand",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "brandform",
														"type": "String"
													},
													"sink": {
														"name": "brandform",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "quantity",
														"type": "String"
													},
													"sink": {
														"name": "quantity",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_value",
														"type": "String"
													},
													"sink": {
														"name": "gross_value",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "discount",
														"type": "String"
													},
													"sink": {
														"name": "discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "taxable_scheme",
														"type": "String"
													},
													"sink": {
														"name": "taxable_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_amount",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_amount",
														"type": "String"
													},
													"sink": {
														"name": "igsttax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_amount",
														"type": "String"
													},
													"sink": {
														"name": "cesstax",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_code",
														"type": "String"
													},
													"sink": {
														"name": "mracc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "mracc_desc",
														"type": "String"
													},
													"sink": {
														"name": "mracc_desc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "vendor",
														"type": "String"
													},
													"sink": {
														"name": "vendor",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "net_amount",
														"type": "String"
													},
													"sink": {
														"name": "net_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_discount",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_discount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_on_scheme",
														"type": "String"
													},
													"sink": {
														"name": "tax_on_scheme",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tax_in_rlp",
														"type": "String"
													},
													"sink": {
														"name": "tax_in_rlp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailing",
														"type": "String"
													},
													"sink": {
														"name": "retailing",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "gross_in_slp",
														"type": "String"
													},
													"sink": {
														"name": "gross_in_slp",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "po_no",
														"type": "String"
													},
													"sink": {
														"name": "po_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dse_code",
														"type": "String"
													},
													"sink": {
														"name": "dse_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "msu",
														"type": "String"
													},
													"sink": {
														"name": "msu",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "reason",
														"type": "String"
													},
													"sink": {
														"name": "reason",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "distributor_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "dist_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "retailer_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "ret_gstinno",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "srn_ref_no",
														"type": "String"
													},
													"sink": {
														"name": "srn_ref_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "composite",
														"type": "String"
													},
													"sink": {
														"name": "composite",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "cgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "sgst_rate",
														"type": "String"
													},
													"sink": {
														"name": "sgsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "igst_rate",
														"type": "String"
													},
													"sink": {
														"name": "igsttax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "cess_rate",
														"type": "String"
													},
													"sink": {
														"name": "cesstax_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_code",
														"type": "String"
													},
													"sink": {
														"name": "branch_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_name",
														"type": "String"
													},
													"sink": {
														"name": "branch_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "order_mode",
														"type": "String"
													},
													"sink": {
														"name": "order_mode",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_code",
														"type": "String"
													},
													"sink": {
														"name": "tc_code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tc_name",
														"type": "String"
													},
													"sink": {
														"name": "tc_name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Filename",
														"type": "String"
													},
													"sink": {
														"name": "Filename",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Lastmodifieddatetime",
														"type": "String"
													},
													"sink": {
														"name": "LastModifiedDatetime",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "batch",
														"type": "String"
													},
													"sink": {
														"name": "batch",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "upc",
														"type": "String"
													},
													"sink": {
														"name": "upc",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_amount",
														"type": "String"
													},
													"sink": {
														"name": "tcs_amount",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "remarks",
														"type": "String"
													},
													"sink": {
														"name": "remarks",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "tcs_rate",
														"type": "String"
													},
													"sink": {
														"name": "tcs_rate",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "branch_gst_no",
														"type": "String"
													},
													"sink": {
														"name": "branch_gst_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_no",
														"type": "String"
													},
													"sink": {
														"name": "dl_no",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "dl_expiry_date",
														"type": "String"
													},
													"sink": {
														"name": "dl_expiry_date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "irn_no",
														"type": "String"
													},
													"sink": {
														"name": "irn_no",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "ADLSCSVDataSource_Folder_withoutgzip",
											"type": "DatasetReference",
											"parameters": {
												"Container": {
													"value": "@pipeline().parameters.Container",
													"type": "Expression"
												},
												"Directory": {
													"value": "@concat('Site PSR Data/', formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'MM'), '/', formatDateTime(pipeline().parameters.ProcessDate, 'dd'),formatDateTime(pipeline().parameters.ProcessDate, 'MM'),formatDateTime(pipeline().parameters.ProcessDate, 'yyyy'), '/')\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_DPSR_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Folder": {
						"type": "string"
					},
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SingleFileCopy_WINITCCCR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CCCR Detail",
						"description": "Copy a file from the source store to the destination store.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"additionalColumns": [
									{
										"name": "Filename",
										"value": {
											"value": "@concat('CCRDetail_',pipeline().parameters.ProcessDate,'.csv')",
											"type": "Expression"
										}
									},
									{
										"name": "Lastmodifieddatetime",
										"value": {
											"value": "@addminutes(utcnow(),330)",
											"type": "Expression"
										}
									}
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								},
								"recursive": false
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tmpRawWinit_CCRDetail",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Site",
											"type": "String"
										},
										"sink": {
											"name": "Site",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DistributorName",
											"type": "String"
										},
										"sink": {
											"name": "DistributorName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubDCode",
											"type": "String"
										},
										"sink": {
											"name": "SubDCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubDName",
											"type": "String"
										},
										"sink": {
											"name": "SubDName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "BranchCode",
											"type": "String"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubD Location",
											"type": "String"
										},
										"sink": {
											"name": "SubD Location",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DseCode",
											"type": "String"
										},
										"sink": {
											"name": "DseCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DseName",
											"type": "String"
										},
										"sink": {
											"name": "DseName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "String"
										},
										"sink": {
											"name": "Date",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RouteName",
											"type": "String"
										},
										"sink": {
											"name": "RouteName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RetailerCode",
											"type": "String"
										},
										"sink": {
											"name": "RetailerCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RetailerName",
											"type": "String"
										},
										"sink": {
											"name": "RetailerName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ContactNumber1",
											"type": "String"
										},
										"sink": {
											"name": "ContactNumber1",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ContactNumber2",
											"type": "String"
										},
										"sink": {
											"name": "ContactNumber2",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ChannelName",
											"type": "String"
										},
										"sink": {
											"name": "ChannelName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubChannelName",
											"type": "String"
										},
										"sink": {
											"name": "SubChannelName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "String"
										},
										"sink": {
											"name": "StartTime",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "String"
										},
										"sink": {
											"name": "EndTime",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InTime",
											"type": "String"
										},
										"sink": {
											"name": "InTime",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrderValue",
											"type": "String"
										},
										"sink": {
											"name": "OrderValue",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Productivity",
											"type": "String"
										},
										"sink": {
											"name": "Productivity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Reason",
											"type": "String"
										},
										"sink": {
											"name": "Reason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SkipReason",
											"type": "String"
										},
										"sink": {
											"name": "SkipReason",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VisitLatitude",
											"type": "String"
										},
										"sink": {
											"name": "VisitLatitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VisitLongitude",
											"type": "String"
										},
										"sink": {
											"name": "VisitLongitude",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DeviationInMeter",
											"type": "String"
										},
										"sink": {
											"name": "DeviationInMeter",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Deviated",
											"type": "String"
										},
										"sink": {
											"name": "Deviated",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ReasonForDeviation",
											"type": "String"
										},
										"sink": {
											"name": "ReasonForDeviation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OnRoute",
											"type": "String"
										},
										"sink": {
											"name": "OnRoute",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Remarks",
											"type": "String"
										},
										"sink": {
											"name": "Remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "IsBilled",
											"type": "String"
										},
										"sink": {
											"name": "IsBilled",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Filename",
											"type": "String"
										},
										"sink": {
											"name": "Filename",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Lastmodifieddatetime",
											"type": "String"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_WINIT_CCCR_Detail",
								"type": "DatasetReference",
								"parameters": {
									"Filename": {
										"value": "@concat('CCRDetail_',pipeline().parameters.ProcessDate,'.csv')",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_WINITCCCR_table_Detail",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "WINIT Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SmartBasket-DF-To-TAS-Transfer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT * FROM tmpRawSmartBasket",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE tmpRawSmartBasketData",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Branch_Code",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Branch_Code",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Customer_Key",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Customer_Key",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Effective_Month",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Effective_Month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Product_Key",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Product_Key",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reco_Qty",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reco_Qty",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Product_Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Product_Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Reco_Strategy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Reco_Strategy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "New_RecoIdx",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "New_RecoIdx",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Target_Points",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Target_Points",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FileName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FileName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "LastModifiedDatetime",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LastModifiedDatetime",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FileSetId",
											"type": "Int64",
											"physicalType": "bigint"
										},
										"sink": {
											"name": "FileSetId",
											"type": "Int64",
											"physicalType": "bigint"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFoundationConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_TAS_tmpRawSmartBasketData",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Smart Basket"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SmartBasket_Staging-To-DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file data from Staging to DB",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SmartBasketStorageStagingDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Smart Basket Data",
									"description": "Copy a file from the source store to the destination store.",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "Filename",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												},
												{
													"name": "LastModifiedDatetime",
													"value": {
														"value": "@addminutes(utcnow(),330)",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"wildcardFileName": {
													"value": "@item().name",
													"type": "Expression"
												},
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											},
											"recursive": false
										},
										"sink": {
											"type": "SqlDWSink",
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											}
										},
										"enableStaging": true,
										"stagingSettings": {
											"linkedServiceName": {
												"referenceName": "DFPolybaseStagingStorageLink",
												"type": "LinkedServiceReference"
											},
											"path": "polybasestaging"
										},
										"dataIntegrationUnits": 2,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Branch_Code",
														"type": "String"
													},
													"sink": {
														"name": "Branch_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Customer_Key",
														"type": "String"
													},
													"sink": {
														"name": "Customer_Key",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Effective_Month",
														"type": "String"
													},
													"sink": {
														"name": "Effective_Month",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Product_Key",
														"type": "String"
													},
													"sink": {
														"name": "Product_Key",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Reco_Qty",
														"type": "String"
													},
													"sink": {
														"name": "Reco_Qty",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Product_Type",
														"type": "String"
													},
													"sink": {
														"name": "Product_Type",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Reco_Strategy",
														"type": "String"
													},
													"sink": {
														"name": "Reco_Strategy",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "New_RecoIdx",
														"type": "String"
													},
													"sink": {
														"name": "New_RecoIdx",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Target_Points",
														"type": "String"
													},
													"sink": {
														"name": "Target_Points",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Filename",
														"type": "String"
													},
													"sink": {
														"name": "FileName",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "LastModifiedDatetime",
														"type": "String"
													},
													"sink": {
														"name": "LastModifiedDatetime",
														"type": "String"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "SmartBasketCSV_Staging",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_SmartBasket_table",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2021-01-04T16:41:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASFileProcessed')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spGetAutoOrderFileList_Cloud1_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spGetAutoOrderFileList]",
								"storedProcedureParameters": {
									"CloudId": {
										"type": "Int32",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_TAS_tmpLeapDataLoadDPSR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cloud1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "spGetAutoOrderFileList_Cloud1_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('spGetAutoOrderFileList_Cloud1_Lookup').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Cloud1OrderFilesMetaData",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud1Default",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "S3TASOrderDataSet_Cloud1_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "LEAP/Cloud1/Upload"
											}
										},
										"fieldList": [
											"childItems",
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AmazonS3ReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud1Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud2",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Cloud1OrderFilesMetaData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud2",
										"value": {
											"value": "@bool(startswith(item().FileSName,string(activity('Cloud1OrderFilesMetaData').output.childItems)))\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If File Exists Cloud1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('bCheckIFFileExists')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "spMarkAutoDownloadOrderFileProcessed",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spMarkAutoDownloadOrderFileProcessed]",
													"storedProcedureParameters": {
														"TrnsCycleId": {
															"value": {
																"value": "@item().TrnsCycleId",
																"type": "Expression"
															},
															"type": "Int64"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "TASDatabase",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "spGetAutoOrderFileList_Cloud2_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spGetAutoOrderFileList]",
								"storedProcedureParameters": {
									"CloudId": {
										"type": "Int32",
										"value": "2"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_TAS_tmpLeapDataLoadDPSR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cloud2",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "spGetAutoOrderFileList_Cloud2_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('spGetAutoOrderFileList_Cloud2_Lookup').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Cloud2OrderFilesMetaData",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud2Default",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "S3TASOrderDataSet_Cloud2_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "LEAP/Cloud2/Upload"
											}
										},
										"fieldList": [
											"childItems",
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AmazonS3ReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud2Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud2",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud2",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Cloud2OrderFilesMetaData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud2",
										"value": {
											"value": "@bool(startswith(item().FileSName,string(activity('Cloud2OrderFilesMetaData').output.childItems)))\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If File Exists Cloud2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('bCheckIFFileExists_Cloud2')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "spMarkAutoDownloadOrderFileProcessed_Cloud2",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spMarkAutoDownloadOrderFileProcessed]",
													"storedProcedureParameters": {
														"TrnsCycleId": {
															"value": {
																"value": "@item().TrnsCycleId",
																"type": "Expression"
															},
															"type": "Int64"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "TASDatabase",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "spGetAutoOrderFileList_Cloud3_Lookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spGetAutoOrderFileList]",
								"storedProcedureParameters": {
									"CloudId": {
										"type": "Int32",
										"value": "3"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_TAS_tmpLeapDataLoadDPSR",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_Cloud3",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "spGetAutoOrderFileList_Cloud3_Lookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('spGetAutoOrderFileList_Cloud3_Lookup').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Cloud3OrderFilesMetaData",
									"type": "GetMetadata",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud3Default",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "S3TASOrderDataSet_Cloud3_Folder",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "LEAP/Cloud3/Upload"
											}
										},
										"fieldList": [
											"childItems",
											"itemName",
											"lastModified"
										],
										"storeSettings": {
											"type": "AmazonS3ReadSettings",
											"recursive": true
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud3Default",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud3",
										"value": {
											"value": "@bool(0)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "bCheckIFFileExistsCloud3",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Cloud3OrderFilesMetaData",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "bCheckIFFileExists_Cloud3",
										"value": {
											"value": "@bool(startswith(item().FileSName,string(activity('Cloud3OrderFilesMetaData').output.childItems)))\n\n",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If File Exists Cloud3",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "bCheckIFFileExistsCloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@variables('bCheckIFFileExists_Cloud3')",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "spMarkAutoDownloadOrderFileProcessed_Cloud3",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[[dbo].[spMarkAutoDownloadOrderFileProcessed]",
													"storedProcedureParameters": {
														"TrnsCycleId": {
															"value": {
																"value": "@item().TrnsCycleId",
																"type": "Expression"
															},
															"type": "Int64"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "TASDatabase",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"bCheckIFFileExists": {
						"type": "Boolean"
					},
					"bCheckIFFileExists_Cloud2": {
						"type": "Boolean"
					},
					"bCheckIFFileExists_Cloud3": {
						"type": "Boolean"
					}
				},
				"folder": {
					"name": "TASOrder"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:36:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASOrderLog_Cloud1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cloud1FilesMetaData",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "S3TASOrderDataSet_Cloud1_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "LEAP/Cloud1/Log"
								}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AmazonS3ReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Cloud1FilesFilter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Cloud1FilesMetaData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Cloud1FilesMetaData').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachCloud1FolderFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Cloud1FilesFilter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Cloud1FilesFilter').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LeapOrderLog_Cloud1",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LookupspGetAutoTransferCycleIdForErrorOrder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "TrnsCycleId",
													"value": {
														"value": "@activity('LookupspGetAutoTransferCycleIdForErrorOrder').output.firstRow.TrnsCycleId",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 2,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Branch_Code",
														"type": "String"
													},
													"sink": {
														"name": "Branch_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Number",
														"type": "String"
													},
													"sink": {
														"name": "Order_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DSE_Code",
														"type": "String"
													},
													"sink": {
														"name": "DSE_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Retailer_Code",
														"type": "String"
													},
													"sink": {
														"name": "Retailer_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Route_Code",
														"type": "String"
													},
													"sink": {
														"name": "Route_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Date",
														"type": "String"
													},
													"sink": {
														"name": "Order_Date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Exp_Delivery_Date",
														"type": "String"
													},
													"sink": {
														"name": "Exp_Delivery_Date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SUBBF_Name",
														"type": "String"
													},
													"sink": {
														"name": "SUBBF_Name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Qty",
														"type": "String"
													},
													"sink": {
														"name": "Order_Qty",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TeleCaller_Name",
														"type": "String"
													},
													"sink": {
														"name": "TeleCaller_Name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TeleCaller_Code",
														"type": "String"
													},
													"sink": {
														"name": "TeleCaller_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PO_Number",
														"type": "String"
													},
													"sink": {
														"name": "PO_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Error_Description",
														"type": "String"
													},
													"sink": {
														"name": "Error_Description",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TrnsCycleId",
														"type": "String"
													},
													"sink": {
														"name": "TrnsCycleId",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "S3TASOrderDataSet_Cloud1_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_TAS_tblDownloadOrderDetail_Error",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "DeletelogFiles_Cloud1",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "LeapOrderLog_Cloud1_Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "S3TASOrderDataSet_Cloud1_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AmazonS3ReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "LookupspGetAutoTransferCycleIdForErrorOrder",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[spGetAutoTransferCycleIdForErrorOrder]",
											"storedProcedureParameters": {
												"CloudId": {
													"type": "Byte",
													"value": "1"
												},
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_TAS_tblDownloadOrderDetail_Error",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "LeapOrderLog_Cloud1_Staging",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LeapOrderLog_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "TrnsCycleId",
													"value": {
														"value": "activity('LookupspGetAutoTransferCycleIdForErrorOrder').output.firstRow.TrnsCycleId",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 2
									},
									"inputs": [
										{
											"referenceName": "S3TASOrderDataSet_Cloud1_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "TASOrderLogStorageDS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "Cloud01"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TASOrder"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:36:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASOrderLog_Cloud2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cloud2FilesMetaData",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "S3TASOrderDataSet_Cloud2_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "LEAP/Cloud2/Log"
								}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AmazonS3ReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Cloud2FilesFilter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Cloud2FilesMetaData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Cloud2FilesMetaData').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachCloud2FolderFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Cloud2FilesFilter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Cloud2FilesFilter').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LeapOrderLog_Cloud2_Staging",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LeapOrderLog_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 2
									},
									"inputs": [
										{
											"referenceName": "S3TASOrderDataSet_Cloud2_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "TASOrderLogStorageDS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "Cloud02"
											}
										}
									]
								},
								{
									"name": "DeletelogFiles_Cloud2",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "LeapOrderLog_Cloud2_Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "S3TASOrderDataSet_Cloud2_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AmazonS3ReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "LeapOrderLog_Cloud2",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LookupspGetAutoTransferCycleIdForErrorOrder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "TrnsCycleId",
													"value": {
														"value": "@activity('LookupspGetAutoTransferCycleIdForErrorOrder').output.firstRow.TrnsCycleId",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 2,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Branch_Code",
														"type": "String"
													},
													"sink": {
														"name": "Branch_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Number",
														"type": "String"
													},
													"sink": {
														"name": "Order_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DSE_Code",
														"type": "String"
													},
													"sink": {
														"name": "DSE_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Retailer_Code",
														"type": "String"
													},
													"sink": {
														"name": "Retailer_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Route_Code",
														"type": "String"
													},
													"sink": {
														"name": "Route_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Date",
														"type": "String"
													},
													"sink": {
														"name": "Order_Date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Exp_Delivery_Date",
														"type": "String"
													},
													"sink": {
														"name": "Exp_Delivery_Date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SUBBF_Name",
														"type": "String"
													},
													"sink": {
														"name": "SUBBF_Name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Qty",
														"type": "String"
													},
													"sink": {
														"name": "Order_Qty",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TeleCaller_Name",
														"type": "String"
													},
													"sink": {
														"name": "TeleCaller_Name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TeleCaller_Code",
														"type": "String"
													},
													"sink": {
														"name": "TeleCaller_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PO_Number",
														"type": "String"
													},
													"sink": {
														"name": "PO_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Error_Description",
														"type": "String"
													},
													"sink": {
														"name": "Error_Description",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TrnsCycleId",
														"type": "String"
													},
													"sink": {
														"name": "TrnsCycleId",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "S3TASOrderDataSet_Cloud2_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_TAS_tblDownloadOrderDetail_Error",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "LookupspGetAutoTransferCycleIdForErrorOrder",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[spGetAutoTransferCycleIdForErrorOrder]",
											"storedProcedureParameters": {
												"CloudId": {
													"type": "Byte",
													"value": "2"
												},
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_TAS_tblDownloadOrderDetail_Error",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TASOrder"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:36:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASOrderLog_Cloud3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Cloud3FilesMetaData",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "S3TASOrderDataSet_Cloud3_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Directory": "LEAP/Cloud3/Log"
								}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"lastModified"
							],
							"storeSettings": {
								"type": "AmazonS3ReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "Cloud3FilesFilter",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Cloud3FilesMetaData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Cloud3FilesMetaData').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEachCloud3FolderFiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Cloud3FilesFilter",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Cloud3FilesFilter').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LeapOrderLog_Cloud3_Staging",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LeapOrderLog_Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 2
									},
									"inputs": [
										{
											"referenceName": "S3TASOrderDataSet_Cloud3_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "TASOrderLogStorageDS",
											"type": "DatasetReference",
											"parameters": {
												"Directory": "Cloud03"
											}
										}
									]
								},
								{
									"name": "DeletelogFiles_Cloud3",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "LeapOrderLog_Cloud3_Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "S3TASOrderDataSet_Cloud3_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AmazonS3ReadSettings",
											"recursive": true
										}
									}
								},
								{
									"name": "LeapOrderLog_Cloud3",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "LookupspGetAutoTransferCycleIdForErrorOrder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"additionalColumns": [
												{
													"name": "TrnsCycleId",
													"value": {
														"value": "@activity('LookupspGetAutoTransferCycleIdForErrorOrder').output.firstRow.TrnsCycleId",
														"type": "Expression"
													}
												}
											],
											"storeSettings": {
												"type": "AmazonS3ReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"validateDataConsistency": false,
										"dataIntegrationUnits": 2,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "Branch_Code",
														"type": "String"
													},
													"sink": {
														"name": "Branch_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Number",
														"type": "String"
													},
													"sink": {
														"name": "Order_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "DSE_Code",
														"type": "String"
													},
													"sink": {
														"name": "DSE_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Retailer_Code",
														"type": "String"
													},
													"sink": {
														"name": "Retailer_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Route_Code",
														"type": "String"
													},
													"sink": {
														"name": "Route_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Date",
														"type": "String"
													},
													"sink": {
														"name": "Order_Date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Exp_Delivery_Date",
														"type": "String"
													},
													"sink": {
														"name": "Exp_Delivery_Date",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "SUBBF_Name",
														"type": "String"
													},
													"sink": {
														"name": "SUBBF_Name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Order_Qty",
														"type": "String"
													},
													"sink": {
														"name": "Order_Qty",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TeleCaller_Name",
														"type": "String"
													},
													"sink": {
														"name": "TeleCaller_Name",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TeleCaller_Code",
														"type": "String"
													},
													"sink": {
														"name": "TeleCaller_Code",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "PO_Number",
														"type": "String"
													},
													"sink": {
														"name": "PO_Number",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "Error_Description",
														"type": "String"
													},
													"sink": {
														"name": "Error_Description",
														"type": "String"
													}
												},
												{
													"source": {
														"name": "TrnsCycleId",
														"type": "String"
													},
													"sink": {
														"name": "TrnsCycleId",
														"type": "Int64"
													}
												}
											]
										}
									},
									"inputs": [
										{
											"referenceName": "S3TASOrderDataSet_Cloud3_File",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_TAS_tblDownloadOrderDetail_Error",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "LookupspGetAutoTransferCycleIdForErrorOrder",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[[dbo].[spGetAutoTransferCycleIdForErrorOrder]",
											"storedProcedureParameters": {
												"CloudId": {
													"type": "Byte",
													"value": "3"
												},
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_TAS_tblDownloadOrderDetail_Error",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TASOrder"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:36:07Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TeleCallerListForDay')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "tblTAS_tmpRAWTeleCallerListForDay",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "spTransferDFTeleCallerListForDayData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "TRUNCATE TABLE tblTAS_tmpRAWTeleCallerListForDay",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "PolybaseLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TeleCallingId",
											"type": "Int32"
										},
										"sink": {
											"name": "TeleCallingId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "AttendDetId",
											"type": "Int32"
										},
										"sink": {
											"name": "AttendDetId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "StoreId",
											"type": "Int32"
										},
										"sink": {
											"name": "StoreId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Date",
											"type": "DateTime"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CallMade",
											"type": "DateTime"
										},
										"sink": {
											"name": "CallMade",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "DSENodeId",
											"type": "Int32"
										},
										"sink": {
											"name": "DSENodeId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DSENodeType",
											"type": "Int32"
										},
										"sink": {
											"name": "DSENodeType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BranchSubdNodeId",
											"type": "Int32"
										},
										"sink": {
											"name": "BranchSubdNodeId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BranchSubdNodeType",
											"type": "Int32"
										},
										"sink": {
											"name": "BranchSubdNodeType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "StoreCode",
											"type": "String"
										},
										"sink": {
											"name": "StoreCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StoreName",
											"type": "String"
										},
										"sink": {
											"name": "StoreName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ContactPerson",
											"type": "String"
										},
										"sink": {
											"name": "ContactPerson",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ContactNo",
											"type": "String"
										},
										"sink": {
											"name": "ContactNo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Channel",
											"type": "String"
										},
										"sink": {
											"name": "Channel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SectorId",
											"type": "Int32"
										},
										"sink": {
											"name": "SectorId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "flgCallStatus",
											"type": "Byte"
										},
										"sink": {
											"name": "flgCallStatus",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "ScheduleCall",
											"type": "String"
										},
										"sink": {
											"name": "ScheduleCall",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ReasonId",
											"type": "Int32"
										},
										"sink": {
											"name": "ReasonId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CallAttempt",
											"type": "Byte"
										},
										"sink": {
											"name": "CallAttempt",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "TeleReasonId",
											"type": "Int32"
										},
										"sink": {
											"name": "TeleReasonId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TeleUserId",
											"type": "Int32"
										},
										"sink": {
											"name": "TeleUserId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Priority",
											"type": "Int16"
										},
										"sink": {
											"name": "Priority",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "TotalSales",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalSales",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "NoOfInv",
											"type": "Int32"
										},
										"sink": {
											"name": "NoOfInv",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "LastCallDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastCallDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "IsFinalDownloadSubmit",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsFinalDownloadSubmit",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "IsDownloaded",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsDownloaded",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "OutStandingAmt",
											"type": "Decimal"
										},
										"sink": {
											"name": "OutStandingAmt",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "OutStandingDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "OutStandingDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "InvNo",
											"type": "String"
										},
										"sink": {
											"name": "InvNo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "InvDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LoginIdUpd",
											"type": "Int32"
										},
										"sink": {
											"name": "LoginIdUpd",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TimeSTampUpd",
											"type": "DateTime"
										},
										"sink": {
											"name": "TimeSTampUpd",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "OldTeleCallingId",
											"type": "Int32"
										},
										"sink": {
											"name": "OldTeleCallingId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TimeStampIns",
											"type": "DateTime"
										},
										"sink": {
											"name": "TimeStampIns",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "TCRouteCalendarId",
											"type": "Int32"
										},
										"sink": {
											"name": "TCRouteCalendarId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TCPlanCallsMapId",
											"type": "Int32"
										},
										"sink": {
											"name": "TCPlanCallsMapId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "LoginIdIns",
											"type": "Int32"
										},
										"sink": {
											"name": "LoginIdIns",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ChannelId",
											"type": "Int32"
										},
										"sink": {
											"name": "ChannelId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "RuleId",
											"type": "Int32"
										},
										"sink": {
											"name": "RuleId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ScheduleDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "ScheduleDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "CallStartDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "CallStartDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Remarks",
											"type": "String"
										},
										"sink": {
											"name": "Remarks",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastOrderDate",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastOrderDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LastOrderValue",
											"type": "Decimal"
										},
										"sink": {
											"name": "LastOrderValue",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "OrderBy",
											"type": "String"
										},
										"sink": {
											"name": "OrderBy",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastVisit",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastVisit",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LastVisitStatus",
											"type": "String"
										},
										"sink": {
											"name": "LastVisitStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "VisitedBy",
											"type": "String"
										},
										"sink": {
											"name": "VisitedBy",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastCall",
											"type": "DateTime"
										},
										"sink": {
											"name": "LastCall",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LastCallStatus",
											"type": "String"
										},
										"sink": {
											"name": "LastCallStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LastCalledBY",
											"type": "String"
										},
										"sink": {
											"name": "LastCalledBY",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SubChannelId",
											"type": "Int32"
										},
										"sink": {
											"name": "SubChannelId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "SubChannel",
											"type": "String"
										},
										"sink": {
											"name": "SubChannel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FrequencyId",
											"type": "Byte"
										},
										"sink": {
											"name": "FrequencyId",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "AlternateContactNo",
											"type": "String"
										},
										"sink": {
											"name": "AlternateContactNo",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "RouteName",
											"type": "String"
										},
										"sink": {
											"name": "RouteName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FiveStarRuleId",
											"type": "Byte"
										},
										"sink": {
											"name": "FiveStarRuleId",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "FiveStarNoOfGPTgt",
											"type": "Byte"
										},
										"sink": {
											"name": "FiveStarNoOfGPTgt",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "FiveStarNoOfLSSTgt",
											"type": "Byte"
										},
										"sink": {
											"name": "FiveStarNoOfLSSTgt",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "FiveStarIndTgtDlvryVal",
											"type": "Decimal"
										},
										"sink": {
											"name": "FiveStarIndTgtDlvryVal",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "FiveStarProductivityTgt",
											"type": "Decimal"
										},
										"sink": {
											"name": "FiveStarProductivityTgt",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "TotOrderVal",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotOrderVal",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "NoOfSKU",
											"type": "Int32"
										},
										"sink": {
											"name": "NoOfSKU",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "FiveStarNoOfGPAct",
											"type": "Byte"
										},
										"sink": {
											"name": "FiveStarNoOfGPAct",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "FiveStarNoOfLSSAct",
											"type": "Byte"
										},
										"sink": {
											"name": "FiveStarNoOfLSSAct",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "FiveStarTotIndTgtDlvryVal",
											"type": "Decimal"
										},
										"sink": {
											"name": "FiveStarTotIndTgtDlvryVal",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "FiveStarAlrdyAchIndTgtDlvryVal",
											"type": "Decimal"
										},
										"sink": {
											"name": "FiveStarAlrdyAchIndTgtDlvryVal",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "NoOfStarsAch",
											"type": "Byte"
										},
										"sink": {
											"name": "NoOfStarsAch",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "NoOfPendingVisits",
											"type": "Byte"
										},
										"sink": {
											"name": "NoOfPendingVisits",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "TotInvVal",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotInvVal",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "FiveStarNoOfGPAchieved",
											"type": "Byte"
										},
										"sink": {
											"name": "FiveStarNoOfGPAchieved",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "FiveStarNoOfLSSAchieved",
											"type": "Byte"
										},
										"sink": {
											"name": "FiveStarNoOfLSSAchieved",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "DSEIssueIds",
											"type": "String"
										},
										"sink": {
											"name": "DSEIssueIds",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DSEComments",
											"type": "String"
										},
										"sink": {
											"name": "DSEComments",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "flgCCRRoleOver",
											"type": "Byte"
										},
										"sink": {
											"name": "flgCCRRoleOver",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "TCNodeId",
											"type": "Int32"
										},
										"sink": {
											"name": "TCNodeId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "TCNodeType",
											"type": "Int32"
										},
										"sink": {
											"name": "TCNodeType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "BranchCode",
											"type": "String"
										},
										"sink": {
											"name": "BranchCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DSECode",
											"type": "String"
										},
										"sink": {
											"name": "DSECode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OrderCode",
											"type": "String"
										},
										"sink": {
											"name": "OrderCode",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_TAS_tblTAS_tmpRAWTeleCallerListForDay",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_tblTAS_tmpRAWTeleCallerListForDay",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "spPopulateTeleCallerListForDayFromTempTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "tblTAS_tmpRAWTeleCallerListForDay",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateTeleCallerListForDayFromTempTable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spTransferDFTeleCallerListForDayData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTransferDFTeleCallerListForDayData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Additional Process"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}