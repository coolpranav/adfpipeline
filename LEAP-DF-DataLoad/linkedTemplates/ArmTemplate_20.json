{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		},
		"HawkeyeDataImport_properties_HawkeyeDataImport_parameters_Container": {
			"type": "string",
			"defaultValue": "hawkeye-pwa"
		},
		"HawkeyeDataImport_properties_HawkeyeDataImport_parameters_ProcessedDataDate": {
			"type": "string",
			"defaultValue": "@{formatDateTime(utcNow(),'dd-MMM-yyyy')}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyLeap_Staging-To-DB_8_V2_Cloud3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file data from Staging to DB",
				"activities": [
					{
						"name": "GetFileList-Set8",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileDetails]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"type": "Byte",
										"value": {
											"value": "@pipeline().parameters.Cloud",
											"type": "Expression"
										}
									},
									"DFSetID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.SetID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachFileTobeimported",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileList-Set8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList-Set8').output.value\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetFileList",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud3",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists",
											"itemName",
											"lastModified",
											"itemType"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If File Exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileList",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetFileList').output.exists",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IfFileFound",
												"type": "Switch",
												"dependsOn": [
													{
														"activity": "SpCycFileSetEntry",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(item().FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "12",
															"activities": [
																{
																	"name": "RTRM_Cloud3",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "@activity('SpCycFileSetEntry').output.firstRow.CycFileID",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE @{item().temptablename}",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "branch_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_location",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_location",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "address_1",
																						"type": "String"
																					},
																					"sink": {
																						"name": "address_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "address_2",
																						"type": "String"
																					},
																					"sink": {
																						"name": "address_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "pin_number",
																						"type": "String"
																					},
																					"sink": {
																						"name": "pin_number",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "area_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "area_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "area",
																						"type": "String"
																					},
																					"sink": {
																						"name": "area",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "town_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "town_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "town",
																						"type": "String"
																					},
																					"sink": {
																						"name": "town",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "town_class",
																						"type": "String"
																					},
																					"sink": {
																						"name": "town_class",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "city",
																						"type": "String"
																					},
																					"sink": {
																						"name": "city",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "state",
																						"type": "String"
																					},
																					"sink": {
																						"name": "state",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "mobile_number",
																						"type": "String"
																					},
																					"sink": {
																						"name": "mobile_number",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "phone_number",
																						"type": "String"
																					},
																					"sink": {
																						"name": "phone_number",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "contact_person",
																						"type": "String"
																					},
																					"sink": {
																						"name": "contact_person",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "stl_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "stl_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "frequency",
																						"type": "String"
																					},
																					"sink": {
																						"name": "frequency",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "distance",
																						"type": "String"
																					},
																					"sink": {
																						"name": "distance",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "class_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "class_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "class_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "class",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "type_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "subchannel_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "type_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "subchannel",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "mr_account_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "mr_account_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "credit_limit",
																						"type": "String"
																					},
																					"sink": {
																						"name": "credit_limit",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "credit_period",
																						"type": "String"
																					},
																					"sink": {
																						"name": "credit_period",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "invoice_limit",
																						"type": "String"
																					},
																					"sink": {
																						"name": "invoice_limit",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "certificate_type",
																						"type": "String"
																					},
																					"sink": {
																						"name": "certificate_type",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "gst_number",
																						"type": "String"
																					},
																					"sink": {
																						"name": "gst_number",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "pan_no",
																						"type": "String"
																					},
																					"sink": {
																						"name": "pan_no",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dl_number",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dl_number",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dl_expiry_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dl_expiry_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "email",
																						"type": "String"
																					},
																					"sink": {
																						"name": "email",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dob",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dob",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "doa",
																						"type": "String"
																					},
																					"sink": {
																						"name": "doa",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "status",
																						"type": "String"
																					},
																					"sink": {
																						"name": "status",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "default_warehouse_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "default_warehouse_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "default_warehouse",
																						"type": "String"
																					},
																					"sink": {
																						"name": "default_warehouse",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "restricted_orderswap_status",
																						"type": "String"
																					},
																					"sink": {
																						"name": "restricted_orderswap_status",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "lattitude",
																						"type": "String"
																					},
																					"sink": {
																						"name": "lattitude",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "longitude",
																						"type": "String"
																					},
																					"sink": {
																						"name": "longitude",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_radius",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_radius",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "distributor_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "distributor_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "payment_mode",
																						"type": "String"
																					},
																					"sink": {
																						"name": "payment_mode",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_type",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_type",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "store_type",
																						"type": "String"
																					},
																					"sink": {
																						"name": "store_type",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "tbe_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "tbe_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "phonenumber1_verified",
																						"type": "String"
																					},
																					"sink": {
																						"name": "phonenumber1_verified",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "phonenumber1_verifieddate",
																						"type": "String"
																					},
																					"sink": {
																						"name": "phonenumber1_verifieddate",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "phonenumber2_verified",
																						"type": "String"
																					},
																					"sink": {
																						"name": "phonenumber2_verified",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "phonenumber2_verifieddate",
																						"type": "String"
																					},
																					"sink": {
																						"name": "phonenumber2_verifieddate",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "fssai_license_number",
																						"type": "String"
																					},
																					"sink": {
																						"name": "fssai_license_number",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "fssai_license_type",
																						"type": "String"
																					},
																					"sink": {
																						"name": "fssai_license_type",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "fssai_license_expiry",
																						"type": "String"
																					},
																					"sink": {
																						"name": "fssai_license_expiry",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "is_tds_apply",
																						"type": "String"
																					},
																					"sink": {
																						"name": "is_tds_apply",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "is_pan_aadhar_linked",
																						"type": "String"
																					},
																					"sink": {
																						"name": "is_pan_aadhar_linked",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "is_return_filled",
																						"type": "String"
																					},
																					"sink": {
																						"name": "is_return_filled",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "is_tcs_more_than_50k",
																						"type": "String"
																					},
																					"sink": {
																						"name": "is_tcs_more_than_50k",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "is_manual_override",
																						"type": "String"
																					},
																					"sink": {
																						"name": "is_manual_override",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "tax_rate",
																						"type": "String"
																					},
																					"sink": {
																						"name": "tax_rate",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "vc_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "vc_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "vc_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "vc_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "incoverage",
																						"type": "String"
																					},
																					"sink": {
																						"name": "incoverage",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "address_3",
																						"type": "String"
																					},
																					"sink": {
																						"name": "address_3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "tax_location_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "tax_location_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_upi_id",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_upi_id",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "is_government",
																						"type": "String"
																					},
																					"sink": {
																						"name": "is_government",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "credit_note_auto_adjustment_restriction",
																						"type": "String"
																					},
																					"sink": {
																						"name": "credit_note_auto_adjustment_restriction",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "transaction_type",
																						"type": "String"
																					},
																					"sink": {
																						"name": "transaction_type",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "pending_invoice_count",
																						"type": "String"
																					},
																					"sink": {
																						"name": "pending_invoice_count",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "apply_tcs",
																						"type": "String"
																					},
																					"sink": {
																						"name": "apply_tcs",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "tax_location_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "tax_location_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetID"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud3",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"value": "15",
															"activities": [
																{
																	"name": "LOCM_Cloud3",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "@activity('SpCycFileSetEntry').output.firstRow.CycFileID",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE @{item().temptablename}",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "country_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "country_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "country_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "country_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "division_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "division_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "region_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "region_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "region_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "region_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "site_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "site_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "site_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "site_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "distributor_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "distributor_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "distributor_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "distributor_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Filename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetID"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud3",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"value": "21",
															"activities": [
																{
																	"name": "DSEM_Cloud3",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@activity('GetFileList').output.itemName",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "@activity('SpCycFileSetEntry').output.firstRow.CycFileID",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE @{item().temptablename}",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "branch_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branchcode",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branchname",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dsecode",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dsecode",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dsename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dsename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "tbecode",
																						"type": "String"
																					},
																					"sink": {
																						"name": "stlcode",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "tbename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "stlname",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "becode",
																						"type": "String"
																					},
																					"sink": {
																						"name": "becode",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "bename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "bename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "selected_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "selected_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Filename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "smcode",
																						"type": "String"
																					},
																					"sink": {
																						"name": "smcode",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "smname",
																						"type": "String"
																					},
																					"sink": {
																						"name": "smname",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetID"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud3",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"value": "30",
															"activities": [
																{
																	"name": "CopyProductMastertoSeperateBucket_Cloud3",
																	"type": "Copy",
																	"dependsOn": [
																		{
																			"activity": "PRDM_Cloud3",
																			"dependencyConditions": [
																				"Succeeded"
																			]
																		}
																	],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			}
																		},
																		"sink": {
																			"type": "DelimitedTextSink",
																			"storeSettings": {
																				"type": "AzureBlobStorageWriteSettings"
																			},
																			"formatSettings": {
																				"type": "DelimitedTextWriteSettings",
																				"quoteAllText": true,
																				"fileExtension": ""
																			}
																		},
																		"enableStaging": false,
																		"dataIntegrationUnits": 2
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud3",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_STR_DFDataFoundation",
																			"type": "DatasetReference",
																			"parameters": {
																				"filename": {
																					"value": "@item().name",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																},
																{
																	"name": "PRDM_Cloud3",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@item().name",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "@activity('SpCycFileSetEntry').output.firstRow.CycFileID",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"preCopyScript": {
																				"value": "TRUNCATE TABLE @{item().temptablename}",
																				"type": "Expression"
																			},
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "legal_entity",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Legal_entity",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "category_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Category Code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "category_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Category Name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "brand_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Brand Code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "brand_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Brand Name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "brandform_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Brand Form Code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "brandform_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Brand Form Name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sub_brandform_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "SubBF Code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sub_brandform_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "SubBF Name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "product_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Product_Code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "desc_short",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Product_Short_Desc",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Product_Full_Desc",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "weight",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Piece_Weight",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "conversion_qty",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Conversion_Qty",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "msu",
																						"type": "String"
																					},
																					"sink": {
																						"name": "MSU",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "volume",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Volume",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "hsn_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "HSN_Code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "is_drug",
																						"type": "String"
																					},
																					"sink": {
																						"name": "IsDrug",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "shelf_life",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Shelf Life",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sap_upc",
																						"type": "String"
																					},
																					"sink": {
																						"name": "SAP UPC",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "bar_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Bar Code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dm3",
																						"type": "String"
																					},
																					"sink": {
																						"name": "DM3",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Filename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "is_food",
																						"type": "String"
																					},
																					"sink": {
																						"name": "is_food",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "status",
																						"type": "String"
																					},
																					"sink": {
																						"name": "status",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "distributor_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "distributor_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "distributor_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "distributor_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "distributor_product_short_desc",
																						"type": "String"
																					},
																					"sink": {
																						"name": "distributor_product_short_desc",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetID"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud3",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														}
													]
												}
											},
											{
												"name": "SpCycFileSetEntry",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpCycFileEntry]",
														"storedProcedureParameters": {
															"CycleID": {
																"type": "Int64",
																"value": {
																	"value": "@pipeline().parameters.CycleID",
																	"type": "Expression"
																}
															},
															"DataDate": {
																"type": "DateTime",
																"value": {
																	"value": "@formatDateTime(pipeline().parameters.DataDate,'yyyy-MMM-dd')",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@item().FileID",
																	"type": "Expression"
																}
															},
															"FileName": {
																"type": "String",
																"value": {
																	"value": "@activity('GetFileList').output.itemName",
																	"type": "Expression"
																}
															},
															"flgProcessType": {
																"type": "Byte",
																"value": "1"
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "SpCycFileSetUpdate",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "IfFileFound",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpCycFileEntry]",
														"storedProcedureParameters": {
															"CycleID": {
																"type": "Int64",
																"value": {
																	"value": "@pipeline().parameters.CycleID",
																	"type": "Expression"
																}
															},
															"DataDate": {
																"type": "DateTime",
																"value": {
																	"value": "@formatDateTime(pipeline().parameters.DataDate,'yyyy-MMM-dd')",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@item().FileID",
																	"type": "Expression"
																}
															},
															"FileName": {
																"type": "String",
																"value": {
																	"value": "@activity('GetFileList').output.itemName",
																	"type": "Expression"
																}
															},
															"flgProcessType": {
																"type": "Byte",
																"value": "2"
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "CopyLeapStaging-To-ADLS-OneFile-Cloud3",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "SpCycFileSetUpdate",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyLeapStaging-To-ADLS-OneFile-Cloud3",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"Directory": "cntleap",
														"Folder": {
															"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
															"type": "Expression"
														},
														"FileName": {
															"value": "@activity('GetFileList').output.itemName",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "DeleteStagingOneFile-Cloud3",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "CopyLeapStaging-To-ADLS-OneFile-Cloud3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "DeleteStagingOneFile_Cloud3",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FileName": {
															"value": "@activity('GetFileList').output.itemName",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SetID": {
						"type": "int",
						"defaultValue": 8
					},
					"CycleID": {
						"type": "int"
					},
					"DataDate": {
						"type": "string"
					},
					"Cloud": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-09T03:23:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyLeap_Staging-To-DB_DistributorLevel_Cloud2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file data from Staging to DB",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_V2_Cloud2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "spGetFileID",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetFileID_DistributorLevel]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "spGetFileID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('spGetFileID').output.firstRow.FileID,0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IfFileFound",
												"type": "Switch",
												"dependsOn": [
													{
														"activity": "SpCycFileSetEntry",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(activity('spGetFileID').output.firstRow.FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "41",
															"activities": [
																{
																	"name": "PLIST_Cloud2",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@item().name",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "@activity('SpCycFileSetEntry').output.firstRow.CycFileID",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "company",
																						"type": "String"
																					},
																					"sink": {
																						"name": "company",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "category",
																						"type": "String"
																					},
																					"sink": {
																						"name": "category",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "brand",
																						"type": "String"
																					},
																					"sink": {
																						"name": "brand",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "brand_form",
																						"type": "String"
																					},
																					"sink": {
																						"name": "brand_form",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sub_brand_form",
																						"type": "String"
																					},
																					"sink": {
																						"name": "sub_brand_form",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sku_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "sku_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sku_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "sku_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "product_batch",
																						"type": "String"
																					},
																					"sink": {
																						"name": "product_batch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "mrp",
																						"type": "String"
																					},
																					"sink": {
																						"name": "mrp",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "slp",
																						"type": "String"
																					},
																					"sink": {
																						"name": "slp",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "srp",
																						"type": "String"
																					},
																					"sink": {
																						"name": "srp",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "upc",
																						"type": "String"
																					},
																					"sink": {
																						"name": "upc",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "msu",
																						"type": "String"
																					},
																					"sink": {
																						"name": "msu",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "hsn_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "hsn_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "spg_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "spg_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "spg_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "spg_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "expiry_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "expiry_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "ean_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "ean_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "weight",
																						"type": "String"
																					},
																					"sink": {
																						"name": "weight",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "volume",
																						"type": "String"
																					},
																					"sink": {
																						"name": "volume",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetID"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud2",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@string(activity('spGetFileID').output.firstRow.temptablename)",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"value": "47",
															"activities": [
																{
																	"name": "LPB_Cloud2",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@item().name",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "@activity('SpCycFileSetEntry').output.firstRow.CycFileID",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "branch",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_location",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_location",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "planned_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dsecode",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dsename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "coverage",
																						"type": "String"
																					},
																					"sink": {
																						"name": "coverage",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "total_bills",
																						"type": "String"
																					},
																					"sink": {
																						"name": "totbills",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "productive_bills",
																						"type": "String"
																					},
																					"sink": {
																						"name": "productivebills",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "productivity",
																						"type": "String"
																					},
																					"sink": {
																						"name": "productivity",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "total_lines",
																						"type": "String"
																					},
																					"sink": {
																						"name": "totlines",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "lpb",
																						"type": "String"
																					},
																					"sink": {
																						"name": "lpb_percentage",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Filename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "productivity_norm",
																						"type": "String"
																					},
																					"sink": {
																						"name": "productivity_norm",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetID"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud2",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@string(activity('spGetFileID').output.firstRow.temptablename)",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														}
													]
												}
											},
											{
												"name": "SpCycFileSetEntry",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "SpTruncateDistributorLevelTempTables",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpCycFileEntry_DistributorLevel]",
														"storedProcedureParameters": {
															"CycleID": {
																"type": "Int64",
																"value": {
																	"value": "@pipeline().parameters.CycleID",
																	"type": "Expression"
																}
															},
															"DataDate": {
																"type": "DateTime",
																"value": {
																	"value": "@formatDateTime(pipeline().parameters.DataDate,'yyyy-MMM-dd')",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@activity('spGetFileID').output.firstRow.FileID",
																	"type": "Expression"
																}
															},
															"FileName": {
																"type": "String",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															"flgProcessType": {
																"type": "Byte",
																"value": "1"
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "SpCycFileSetUpdate",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "IfFileFound",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpCycFileEntry_DistributorLevel]",
														"storedProcedureParameters": {
															"CycleID": {
																"type": "Int64",
																"value": {
																	"value": "@pipeline().parameters.CycleID",
																	"type": "Expression"
																}
															},
															"DataDate": {
																"type": "DateTime",
																"value": {
																	"value": "@formatDateTime(pipeline().parameters.DataDate,'yyyy-MMM-dd')",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@activity('spGetFileID').output.firstRow.FileID",
																	"type": "Expression"
																}
															},
															"FileName": {
																"type": "String",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															"flgProcessType": {
																"type": "Byte",
																"value": "2"
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "SpTruncateDistributorLevelTempTables",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpTruncateDistributorLevelTempTables]",
														"storedProcedureParameters": {
															"DataProcessDate": {
																"type": "String",
																"value": {
																	"value": "@utcnow()",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@activity('spGetFileID').output.firstRow.FileID",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "CopyLeapStaging-To-ADLS-OneFile-Cloud2",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "SpCycFileSetUpdate",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyLeapStaging-To-ADLS-OneFile-Cloud2",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"Directory": "cntleap",
														"Folder": {
															"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
															"type": "Expression"
														},
														"FileName": {
															"value": "@activity('GetFileList').output.itemName",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "DeleteStagingOneFile-Cloud2",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "CopyLeapStaging-To-ADLS-OneFile-Cloud2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "DeleteStagingOneFile_Cloud2",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FileName": {
															"value": "@activity('GetFileList').output.itemName",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SetID": {
						"type": "string",
						"defaultValue": "9"
					},
					"CycleID": {
						"type": "string"
					},
					"DataDate": {
						"type": "string"
					},
					"Cloud": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-01-04T16:41:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyLeap_Staging-To-DB_DistributorLevel_Cloud3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file data from Staging to DB",
				"activities": [
					{
						"name": "GetFileList",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset_V2_Cloud3",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"lastModified",
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFile",
						"description": "Iterate each file, and move them one by one.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFiles",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFiles').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "spGetFileID",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetFileID_DistributorLevel]",
											"storedProcedureParameters": {
												"FileName": {
													"type": "String",
													"value": {
														"value": "@item().name",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "spGetFileID",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(activity('spGetFileID').output.firstRow.FileID,0)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IfFileFound",
												"type": "Switch",
												"dependsOn": [
													{
														"activity": "SpCycFileSetEntry",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(activity('spGetFileID').output.firstRow.FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "42",
															"activities": [
																{
																	"name": "PLIST_Cloud3",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@item().name",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "@activity('SpCycFileSetEntry').output.firstRow.CycFileID",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "company",
																						"type": "String"
																					},
																					"sink": {
																						"name": "company",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "category",
																						"type": "String"
																					},
																					"sink": {
																						"name": "category",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "brand",
																						"type": "String"
																					},
																					"sink": {
																						"name": "brand",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "brand_form",
																						"type": "String"
																					},
																					"sink": {
																						"name": "brand_form",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sub_brand_form",
																						"type": "String"
																					},
																					"sink": {
																						"name": "sub_brand_form",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sku_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "sku_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sku_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "sku_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "product_batch",
																						"type": "String"
																					},
																					"sink": {
																						"name": "product_batch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "mrp",
																						"type": "String"
																					},
																					"sink": {
																						"name": "mrp",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "slp",
																						"type": "String"
																					},
																					"sink": {
																						"name": "slp",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "srp",
																						"type": "String"
																					},
																					"sink": {
																						"name": "srp",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "upc",
																						"type": "String"
																					},
																					"sink": {
																						"name": "upc",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "msu",
																						"type": "String"
																					},
																					"sink": {
																						"name": "msu",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "hsn_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "hsn_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "spg_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "spg_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "spg_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "spg_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "expiry_date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "expiry_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "ean_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "ean_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "weight",
																						"type": "String"
																					},
																					"sink": {
																						"name": "weight",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "volume",
																						"type": "String"
																					},
																					"sink": {
																						"name": "volume",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileName",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetID"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud3",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@string(activity('spGetFileID').output.firstRow.temptablename)",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														},
														{
															"value": "48",
															"activities": [
																{
																	"name": "LPB_Cloud3",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@item().name",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "@activity('SpCycFileSetEntry').output.firstRow.CycFileID",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@item().name",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "branch",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_location",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_location",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "planned_date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dsecode",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dsename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "coverage",
																						"type": "String"
																					},
																					"sink": {
																						"name": "coverage",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "total_bills",
																						"type": "String"
																					},
																					"sink": {
																						"name": "totbills",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "productive_bills",
																						"type": "String"
																					},
																					"sink": {
																						"name": "productivebills",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "productivity",
																						"type": "String"
																					},
																					"sink": {
																						"name": "productivity",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "total_lines",
																						"type": "String"
																					},
																					"sink": {
																						"name": "totlines",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "lpb",
																						"type": "String"
																					},
																					"sink": {
																						"name": "lpb_percentage",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Filename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "productivity_norm",
																						"type": "String"
																					},
																					"sink": {
																						"name": "productivity_norm",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetID"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud3",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@string(activity('spGetFileID').output.firstRow.temptablename)",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														}
													]
												}
											},
											{
												"name": "SpCycFileSetEntry",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "SpTruncateDistributorLevelTempTables",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpCycFileEntry_DistributorLevel]",
														"storedProcedureParameters": {
															"CycleID": {
																"type": "Int64",
																"value": {
																	"value": "@pipeline().parameters.CycleID",
																	"type": "Expression"
																}
															},
															"DataDate": {
																"type": "DateTime",
																"value": {
																	"value": "@formatDateTime(pipeline().parameters.DataDate,'yyyy-MMM-dd')",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@activity('spGetFileID').output.firstRow.FileID",
																	"type": "Expression"
																}
															},
															"FileName": {
																"type": "String",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															"flgProcessType": {
																"type": "Byte",
																"value": "1"
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "SpCycFileSetUpdate",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "IfFileFound",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpCycFileEntry_DistributorLevel]",
														"storedProcedureParameters": {
															"CycleID": {
																"type": "Int64",
																"value": {
																	"value": "@pipeline().parameters.CycleID",
																	"type": "Expression"
																}
															},
															"DataDate": {
																"type": "DateTime",
																"value": {
																	"value": "@formatDateTime(pipeline().parameters.DataDate,'yyyy-MMM-dd')",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@activity('spGetFileID').output.firstRow.FileID",
																	"type": "Expression"
																}
															},
															"FileName": {
																"type": "String",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															"flgProcessType": {
																"type": "Byte",
																"value": "2"
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "SpTruncateDistributorLevelTempTables",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpTruncateDistributorLevelTempTables]",
														"storedProcedureParameters": {
															"DataProcessDate": {
																"type": "String",
																"value": {
																	"value": "@utcnow()",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@activity('spGetFileID').output.firstRow.FileID",
																	"type": "Expression"
																}
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "CopyLeapStaging-To-ADLS-OneFile-Cloud3",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "SpCycFileSetUpdate",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyLeapStaging-To-ADLS-OneFile-Cloud3",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"Directory": "cntleap",
														"Folder": {
															"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
															"type": "Expression"
														},
														"FileName": {
															"value": "@activity('GetFileList').output.itemName",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "DeleteStagingOneFile-Cloud3",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "CopyLeapStaging-To-ADLS-OneFile-Cloud3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "DeleteStagingOneFile_Cloud3",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FileName": {
															"value": "@activity('GetFileList').output.itemName",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "FilterFiles",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFileList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'File')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SetID": {
						"type": "string",
						"defaultValue": "9"
					},
					"CycleID": {
						"type": "string"
					},
					"DataDate": {
						"type": "string"
					},
					"Cloud": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-01-04T16:41:12Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyLeap_Staging-To-DB_CCCR_V2_Cloud2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file data from Staging to DB",
				"activities": [
					{
						"name": "GetFileList-Set1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileDetails]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"type": "Byte",
										"value": {
											"value": "@pipeline().parameters.Cloud",
											"type": "Expression"
										}
									},
									"DFSetID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.SetID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachFileTobeimported",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate CCCR TempTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList-Set1').output.value\r\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetFileList",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud2",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists",
											"itemName",
											"lastModified",
											"itemType"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If File Exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileList",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetFileList').output.exists",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IFFileFoundAction",
												"type": "Switch",
												"dependsOn": [
													{
														"activity": "SpCycFileSetEntry",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(item().FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "5",
															"activities": [
																{
																	"name": "CCCR_Cloud2",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@item().name",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "@activity('SpCycFileSetEntry').output.firstRow.CycFileID",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "branch_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_location",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_location",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "route_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "route_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "contact_number_1",
																						"type": "String"
																					},
																					"sink": {
																						"name": "contact_number_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "contact_number_2",
																						"type": "String"
																					},
																					"sink": {
																						"name": "contact_number_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sub_channel_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "sub_channel_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "start_time",
																						"type": "String"
																					},
																					"sink": {
																						"name": "start_time",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "end_time",
																						"type": "String"
																					},
																					"sink": {
																						"name": "end_time",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "intime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "intime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "order_value",
																						"type": "String"
																					},
																					"sink": {
																						"name": "order_value",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "productivity",
																						"type": "String"
																					},
																					"sink": {
																						"name": "productivity",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "reason",
																						"type": "String"
																					},
																					"sink": {
																						"name": "reason",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "visit_latitude",
																						"type": "String"
																					},
																					"sink": {
																						"name": "visit_latitude",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "visit_longitude",
																						"type": "String"
																					},
																					"sink": {
																						"name": "visit_longitude",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "deviation_in_meter",
																						"type": "String"
																					},
																					"sink": {
																						"name": "deviation_in_meter",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "deviation",
																						"type": "String"
																					},
																					"sink": {
																						"name": "deviation",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "reason_for_deviation",
																						"type": "String"
																					},
																					"sink": {
																						"name": "reason_for_deviation",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "on_route",
																						"type": "String"
																					},
																					"sink": {
																						"name": "on_route",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "remarks",
																						"type": "String"
																					},
																					"sink": {
																						"name": "remarks",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Filename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "distance_travelled",
																						"type": "String"
																					},
																					"sink": {
																						"name": "distance_travelled",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "visit_p1m_ach",
																						"type": "String"
																					},
																					"sink": {
																						"name": "visit_p1m_ach",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "visit_p3m_ach",
																						"type": "String"
																					},
																					"sink": {
																						"name": "visit_p3m_ach",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "visit_fb_ach",
																						"type": "String"
																					},
																					"sink": {
																						"name": "visit_fb_ach",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetID"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud2",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														}
													]
												}
											},
											{
												"name": "SpCycFileSetEntry",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpCycFileEntry]",
														"storedProcedureParameters": {
															"CycleID": {
																"type": "Int64",
																"value": {
																	"value": "@pipeline().parameters.CycleID",
																	"type": "Expression"
																}
															},
															"DataDate": {
																"type": "DateTime",
																"value": {
																	"value": "@formatDateTime(pipeline().parameters.DataDate,'yyyy-MMM-dd')",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@item().FileID",
																	"type": "Expression"
																}
															},
															"FileName": {
																"type": "String",
																"value": {
																	"value": "@activity('GetFileList').output.itemName",
																	"type": "Expression"
																}
															},
															"flgProcessType": {
																"type": "Byte",
																"value": "1"
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "SpCycFileSetUpdate",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "IFFileFoundAction",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpCycFileEntry]",
														"storedProcedureParameters": {
															"CycleID": {
																"type": "Int64",
																"value": {
																	"value": "@pipeline().parameters.CycleID",
																	"type": "Expression"
																}
															},
															"DataDate": {
																"type": "DateTime",
																"value": {
																	"value": "@formatDateTime(pipeline().parameters.DataDate,'yyyy-MMM-dd')",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@item().FileID",
																	"type": "Expression"
																}
															},
															"FileName": {
																"type": "String",
																"value": {
																	"value": "@activity('GetFileList').output.itemName",
																	"type": "Expression"
																}
															},
															"flgProcessType": {
																"type": "Byte",
																"value": "2"
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "CopyLeapStaging-To-ADLS-OneFile-Cloud2",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "SpCycFileSetUpdate",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyLeapStaging-To-ADLS-OneFile-Cloud2",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"Directory": "cntleap",
														"Folder": {
															"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
															"type": "Expression"
														},
														"FileName": {
															"value": "@activity('GetFileList').output.itemName",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "DeleteStagingOneFile-Cloud2",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "CopyLeapStaging-To-ADLS-OneFile-Cloud2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "DeleteStagingOneFile_Cloud2",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FileName": {
															"value": "@activity('GetFileList').output.itemName",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Truncate CCCR TempTable",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList-Set1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpTruncateCCCRTempTable]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"type": "Byte",
										"value": {
											"value": "@pipeline().parameters.Cloud",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SetID": {
						"type": "int",
						"defaultValue": 10
					},
					"CycleID": {
						"type": "int"
					},
					"DataDate": {
						"type": "string"
					},
					"Cloud": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-09T03:23:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyLeap_Staging-To-DB_CCCR_V2_Cloud3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file data from Staging to DB",
				"activities": [
					{
						"name": "GetFileList-Set1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileDetails]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"type": "Byte",
										"value": {
											"value": "@pipeline().parameters.Cloud",
											"type": "Expression"
										}
									},
									"DFSetID": {
										"type": "Int32",
										"value": {
											"value": "@pipeline().parameters.SetID",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachFileTobeimported",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate CCCR TempTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileList-Set1').output.value\r\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "GetFileList",
									"type": "GetMetadata",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "LeapStorageSourceDataset_File_V2_Cloud3",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										},
										"fieldList": [
											"exists",
											"itemName",
											"lastModified",
											"itemType"
										],
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										},
										"formatSettings": {
											"type": "BinaryReadSettings"
										}
									}
								},
								{
									"name": "If File Exists",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "GetFileList",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@activity('GetFileList').output.exists",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "IFFileFoundAction",
												"type": "Switch",
												"dependsOn": [
													{
														"activity": "SpCycFileSetEntry",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"on": {
														"value": "@string(item().FileID)",
														"type": "Expression"
													},
													"cases": [
														{
															"value": "6",
															"activities": [
																{
																	"name": "CCCR_Cloud3",
																	"description": "Copy a file from the source store to the destination store.",
																	"type": "Copy",
																	"dependsOn": [],
																	"policy": {
																		"timeout": "7.00:00:00",
																		"retry": 0,
																		"retryIntervalInSeconds": 30,
																		"secureOutput": false,
																		"secureInput": false
																	},
																	"userProperties": [],
																	"typeProperties": {
																		"source": {
																			"type": "DelimitedTextSource",
																			"additionalColumns": [
																				{
																					"name": "Filename",
																					"value": {
																						"value": "@item().name",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "LastModifiedDatetime",
																					"value": {
																						"value": "@addminutes(utcnow(),330)",
																						"type": "Expression"
																					}
																				},
																				{
																					"name": "FileSetID",
																					"value": {
																						"value": "@activity('SpCycFileSetEntry').output.firstRow.CycFileID",
																						"type": "Expression"
																					}
																				}
																			],
																			"storeSettings": {
																				"type": "AzureBlobStorageReadSettings",
																				"recursive": true,
																				"wildcardFileName": {
																					"value": "@activity('GetFileList').output.itemName",
																					"type": "Expression"
																				},
																				"enablePartitionDiscovery": false
																			},
																			"formatSettings": {
																				"type": "DelimitedTextReadSettings"
																			},
																			"recursive": false
																		},
																		"sink": {
																			"type": "SqlDWSink",
																			"allowPolyBase": true,
																			"polyBaseSettings": {
																				"rejectValue": 0,
																				"rejectType": "value",
																				"useTypeDefault": true
																			},
																			"disableMetricsCollection": false
																		},
																		"enableStaging": true,
																		"stagingSettings": {
																			"linkedServiceName": {
																				"referenceName": "DFPolybaseStagingStorageLink",
																				"type": "LinkedServiceReference"
																			},
																			"path": "polybasestaging"
																		},
																		"dataIntegrationUnits": 2,
																		"translator": {
																			"type": "TabularTranslator",
																			"mappings": [
																				{
																					"source": {
																						"name": "branch_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "branch_location",
																						"type": "String"
																					},
																					"sink": {
																						"name": "branch_location",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "dse_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "dse_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "date",
																						"type": "String"
																					},
																					"sink": {
																						"name": "date",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "route_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "route_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_code",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_code",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "retailer_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "retailer_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "contact_number_1",
																						"type": "String"
																					},
																					"sink": {
																						"name": "contact_number_1",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "contact_number_2",
																						"type": "String"
																					},
																					"sink": {
																						"name": "contact_number_2",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "channel_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "channel_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "sub_channel_name",
																						"type": "String"
																					},
																					"sink": {
																						"name": "sub_channel_name",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "start_time",
																						"type": "String"
																					},
																					"sink": {
																						"name": "start_time",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "end_time",
																						"type": "String"
																					},
																					"sink": {
																						"name": "end_time",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "intime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "intime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "order_value",
																						"type": "String"
																					},
																					"sink": {
																						"name": "order_value",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "productivity",
																						"type": "String"
																					},
																					"sink": {
																						"name": "productivity",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "reason",
																						"type": "String"
																					},
																					"sink": {
																						"name": "reason",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "visit_latitude",
																						"type": "String"
																					},
																					"sink": {
																						"name": "visit_latitude",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "visit_longitude",
																						"type": "String"
																					},
																					"sink": {
																						"name": "visit_longitude",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "deviation_in_meter",
																						"type": "String"
																					},
																					"sink": {
																						"name": "deviation_in_meter",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "deviation",
																						"type": "String"
																					},
																					"sink": {
																						"name": "deviation",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "reason_for_deviation",
																						"type": "String"
																					},
																					"sink": {
																						"name": "reason_for_deviation",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "on_route",
																						"type": "String"
																					},
																					"sink": {
																						"name": "on_route",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "remarks",
																						"type": "String"
																					},
																					"sink": {
																						"name": "remarks",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					},
																					"sink": {
																						"name": "LastModifiedDatetime",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "Filename",
																						"type": "String"
																					},
																					"sink": {
																						"name": "Filename",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "distance_travelled",
																						"type": "String"
																					},
																					"sink": {
																						"name": "distance_travelled",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "visit_p1m_ach",
																						"type": "String"
																					},
																					"sink": {
																						"name": "visit_p1m_ach",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "visit_p3m_ach",
																						"type": "String"
																					},
																					"sink": {
																						"name": "visit_p3m_ach",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "visit_fb_ach",
																						"type": "String"
																					},
																					"sink": {
																						"name": "visit_fb_ach",
																						"type": "String"
																					}
																				},
																				{
																					"source": {
																						"name": "FileSetID",
																						"type": "String"
																					},
																					"sink": {
																						"name": "FileSetID"
																					}
																				}
																			]
																		}
																	},
																	"inputs": [
																		{
																			"referenceName": "LeapCSV_Staging_V2_Cloud3",
																			"type": "DatasetReference",
																			"parameters": {}
																		}
																	],
																	"outputs": [
																		{
																			"referenceName": "DS_Destination_table",
																			"type": "DatasetReference",
																			"parameters": {
																				"tablename": {
																					"value": "@item().temptablename",
																					"type": "Expression"
																				}
																			}
																		}
																	]
																}
															]
														}
													]
												}
											},
											{
												"name": "SpCycFileSetEntry",
												"type": "Lookup",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpCycFileEntry]",
														"storedProcedureParameters": {
															"CycleID": {
																"type": "Int64",
																"value": {
																	"value": "@pipeline().parameters.CycleID",
																	"type": "Expression"
																}
															},
															"DataDate": {
																"type": "DateTime",
																"value": {
																	"value": "@formatDateTime(pipeline().parameters.DataDate,'yyyy-MMM-dd')",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@item().FileID",
																	"type": "Expression"
																}
															},
															"FileName": {
																"type": "String",
																"value": {
																	"value": "@activity('GetFileList').output.itemName",
																	"type": "Expression"
																}
															},
															"flgProcessType": {
																"type": "Byte",
																"value": "1"
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "SpCycFileSetUpdate",
												"type": "Lookup",
												"dependsOn": [
													{
														"activity": "IFFileFoundAction",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlDWSource",
														"sqlReaderStoredProcedureName": "[[dbo].[SpCycFileEntry]",
														"storedProcedureParameters": {
															"CycleID": {
																"type": "Int64",
																"value": {
																	"value": "@pipeline().parameters.CycleID",
																	"type": "Expression"
																}
															},
															"DataDate": {
																"type": "DateTime",
																"value": {
																	"value": "@formatDateTime(pipeline().parameters.DataDate,'yyyy-MMM-dd')",
																	"type": "Expression"
																}
															},
															"FileID": {
																"type": "Int32",
																"value": {
																	"value": "@item().FileID",
																	"type": "Expression"
																}
															},
															"FileName": {
																"type": "String",
																"value": {
																	"value": "@activity('GetFileList').output.itemName",
																	"type": "Expression"
																}
															},
															"flgProcessType": {
																"type": "Byte",
																"value": "2"
															}
														},
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"dataset": {
														"referenceName": "DataFoundationConnectionV2",
														"type": "DatasetReference",
														"parameters": {}
													}
												}
											},
											{
												"name": "CopyLeapStaging-To-ADLS-OneFile-Cloud3",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "SpCycFileSetUpdate",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "CopyLeapStaging-To-ADLS-OneFile-Cloud3",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"Directory": "cntleap",
														"Folder": {
															"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
															"type": "Expression"
														},
														"FileName": {
															"value": "@activity('GetFileList').output.itemName",
															"type": "Expression"
														}
													}
												}
											},
											{
												"name": "DeleteStagingOneFile-Cloud3",
												"type": "ExecutePipeline",
												"dependsOn": [
													{
														"activity": "CopyLeapStaging-To-ADLS-OneFile-Cloud3",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "DeleteStagingOneFile_Cloud3",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"FileName": {
															"value": "@activity('GetFileList').output.itemName",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								}
							]
						}
					},
					{
						"name": "Truncate CCCR TempTable",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "GetFileList-Set1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpTruncateCCCRTempTable]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"type": "Byte",
										"value": {
											"value": "@pipeline().parameters.Cloud",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SetID": {
						"type": "int",
						"defaultValue": 10
					},
					"CycleID": {
						"type": "int"
					},
					"DataDate": {
						"type": "string"
					},
					"Cloud": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-09T03:23:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/APIDataProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "API All Extract Data Populate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateAPIAllExtract]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "API All Extract Data Populate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "API"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FocusBrandLoading-LEAP-TO-DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FileTransferfromS3toAzure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteFocusbrandTmpTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyRTDXS3-To-Staging",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FocusbrandLoadingtoDB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FileTransferfromS3toAzure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyRTDX_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spDataLoadFocusBrand",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FocusbrandLoadingtoDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadFocusBrand]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpDeleteFocusbrandTmpTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteFocusbrandTmpTable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteOLDDatafromtmpleaptables]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DataMovement_DF_To_TAS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "WhenAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataMovement_DF-TO-TAS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DeleteFiles_Staging",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "CCRDataLoad",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DataMovement_DF_To_TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR]"
						},
						"linkedServiceName": {
							"referenceName": "PnGDataFoundation",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LookupAllFilesCome",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "DeleteFiles_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckLeapDataLoaded]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DFDBConnection",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "WhenAllFilesCome",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LookupAllFilesCome",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(activity('LookupAllFilesCome').output.firstRow.flgDataloaded)",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "LoadLeapTasIntegration",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapTasIntegration]"
									},
									"linkedServiceName": {
										"referenceName": "PnGDataFoundation",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "PopulateDSETeleCallingStores",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CCRDataLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateDSETeleCallingStores]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-06-05T01:51:48Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily_02_Nov_2021')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DFDataProcessAfterLoading",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DFDataOlapProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataDate": {
									"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_Scale_200",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "APIDataFileGeneration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Scale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "DW200c"
							}
						}
					},
					{
						"name": "AS_Resume",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataProcessAfterLoading",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Resume",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "AS_CubeProcess_Sync_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Sync_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataProcessAfterLoading",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "DW_Scale_200",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,gaurav@astix.in",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "API All Extract Data Populate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DFDataProcessAfterLoading",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateAPIAllExtract]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "API All Extract Data Populate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily_27Oct2021')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DFDataProcessAfterLoading",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DFDataOlapProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataDate": {
									"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DW_Scale_200",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "APIDataFileGeneration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Scale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "DW200c"
							}
						}
					},
					{
						"name": "AS_Resume",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataProcessAfterLoading",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_Resume",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 300
						}
					},
					{
						"name": "AS_CubeProcess_Sync_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Sync_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DFDataProcessAfterLoading",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "AS_Resume",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "DW_Scale_200",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,gaurav@astix.in",
								"Subject": "DataFoundation DataLoading Fails ",
								"ErrorMessage": "Processing Fails , login to Portal for more deatils."
							}
						}
					},
					{
						"name": "API All Extract Data Populate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DFDataProcessAfterLoading",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateAPIAllExtract]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "API All Extract Data Populate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					},
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily_Loop_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_1_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CenterPoint",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_2_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_1_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_3_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_2_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_4_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_3_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_4_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_5_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_4_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_5_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_6_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_5_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_6_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_7_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_6_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_7_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_DistributorLevel_9",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_8_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_DistributorLevel_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_8_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_7_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_8_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CCCR_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_DistributorLevel_9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CenterPoint",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily_V2_Test')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_8_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_8_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_HistoricalLoop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "IfDataforProcess",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpGetDataForProccesing]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_COS_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDayProcessing",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "IfDataforProcess",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('IfDataforProcess').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "DailyDataProcessing",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "StartProcess",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "LeapDataMovement_WithoutProcessing",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@item().windowstartdate",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@item().windowenddate",
												"type": "Expression"
											},
											"DataProcessDate": {
												"value": "@item().DataDate",
												"type": "Expression"
											},
											"Container": {
												"value": "@item().container",
												"type": "Expression"
											},
											"Directory": {
												"value": "@item().directory",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "StartProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpUpdateDataForProccesing]",
										"storedProcedureParameters": {
											"flgStep": {
												"value": "1",
												"type": "Byte"
											},
											"ID": {
												"value": {
													"value": "@item().ID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "EndProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DailyDataProcessing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpUpdateDataForProccesing]",
										"storedProcedureParameters": {
											"flgStep": {
												"value": "2",
												"type": "Byte"
											},
											"ID": {
												"value": {
													"value": "@item().ID",
													"type": "Expression"
												},
												"type": "Int32"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovement_WithoutLoading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeapStaging-To-ADLS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Copy S3 to Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeapStaging-To-ADLS",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Directory": {
									"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
									"type": "Expression"
								},
								"Folder": "cntleap"
							}
						}
					},
					{
						"name": "Delete Staging Files",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "CopyLeapStaging-To-ADLS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "LeapStorageSourceDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							}
						}
					},
					{
						"name": "Copy S3 to Staging",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataProcessing-Loop-V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LeapDataProcessing-Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LeapDataProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CloudInstance": "1"
							}
						}
					},
					{
						"name": "LeapDataProcessing-Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LeapDataProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CloudInstance": "2"
							}
						}
					},
					{
						"name": "LeapDataProcessing-Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "LeapDataProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CloudInstance": "3"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation_Level2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFoldername",
						"description": "Iterate each folder and find the folder or file inside it.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFolder').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "inner folder loop",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MoveADLS-To-dfdatafoundation_Level3",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Container": {
												"value": "@pipeline().parameters.SourceStore_Container",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@concat(pipeline().parameters.SourceStore_Directory,'/', item().name ,'/')\n\n",
												"type": "Expression"
											},
											"DestinationStore_Container": {
												"value": "@pipeline().parameters.DestinationStore_Container",
												"type": "Expression"
											},
											"DestinationStore_Directory": {
												"value": "@pipeline().parameters.DestinationStore_Directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFolder",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:03Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSDataTransfer-ASTIX-TO-DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WhenReadyToImport",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpDFGetDataLoadStatus]",
								"storedProcedureParameters": {
									"Date": {
										"type": "DateTime",
										"value": {
											"value": "@utcnow()",
											"type": "Expression"
										}
									},
									"flgDayorNight": {
										"type": "Byte",
										"value": {
											"value": "@pipeline().parameters.ProcessingType",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_NC_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "WhenReadyToImport",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('WhenReadyToImport').output.firstRow.flgReadyLoad",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyNCS_ASTIX_To_DF",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteNCSTmpTable",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyNCS_ASTIX_To_DF",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "SpDeleteNCSTmpTable",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpDeleteNCSTmpTable]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spExecuteSUBDDailySP",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyNCS_ASTIX_To_DF",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spExecuteSUBDDailySP]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "SpDFUpdateDataTransferStatus",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "spExecuteSUBDDailySP",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpDFUpdateDataTransferStatus]",
										"storedProcedureParameters": {
											"Date": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"flgDayorNight": {
												"value": {
													"value": "@pipeline().parameters.ProcessingType",
													"type": "Expression"
												},
												"type": "Byte"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SQLServerNCSAstix",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ProcessingType": {
						"type": "int"
					}
				},
				"folder": {
					"name": "NCS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSDataTransfer-ASTIX-TO-DF_05Aug2021')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyNCS_ASTIX_To_DF",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyNCS_ASTIX_To_DF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteNCSTmpTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyNCS_ASTIX_To_DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteNCSTmpTable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spExecuteSUBDDailySP",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SpDeleteNCSTmpTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spExecuteSUBDDailySP]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "NCS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSDataTransfer-ASTIX-TO-DF_Historical')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyNCS_ASTIX_To_DF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteNCSTmpTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyNCS_ASTIX_To_DF",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "SpDeleteNCSTmpTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteNCSTmpTable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spExecuteSUBDDailySP",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyNCS_ASTIX_To_DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spExecuteSUBDDailySP]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "NCS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HawkeyeDataImport')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "HawkeyeDataImport",
							"type": "PipelineReference"
						},
						"parameters": {
							"Container": "[parameters('HawkeyeDataImport_properties_HawkeyeDataImport_parameters_Container')]",
							"ProcessedDataDate": "[parameters('HawkeyeDataImport_properties_HawkeyeDataImport_parameters_ProcessedDataDate')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-08-26T12:26:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								15,
								16,
								17,
								18,
								19
							]
						}
					}
				}
			},
			"dependsOn": []
		}
	]
}