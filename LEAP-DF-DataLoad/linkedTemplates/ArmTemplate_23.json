{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		},
		"LeapFileLoading_WithoutProcessing_properties_LeapDataMovement_WithoutLoading_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@adddays(trigger().scheduledTime, -1)"
		},
		"LeapFileLoading_WithoutProcessing_properties_LeapDataMovement_WithoutLoading_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"NCSSUBDDataLoadingFromAstixServer_Day_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType": {
			"type": "int",
			"defaultValue": 1
		},
		"NCSSUBDDataLoadingFromAstixServer_Night_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType": {
			"type": "int",
			"defaultValue": 2
		},
		"LeapDataMovementDaily_properties_LeapDataMovementDaily_parameters_windowStart": {
			"type": "string",
			"defaultValue": "@adddays(trigger().scheduledTime, -1)"
		},
		"LeapDataMovementDaily_properties_LeapDataMovementDaily_parameters_windowEnd": {
			"type": "string",
			"defaultValue": "@trigger().scheduledTime"
		},
		"LeapDataMovementDaily_properties_LeapDataMovementDaily_parameters_DataProcessDate": {
			"type": "string",
			"defaultValue": "@{formatDateTime(utcNow(),'dd-MMM-yyyy')}"
		},
		"LeapDataMovementDaily_properties_LeapDataMovementDaily_parameters_Container": {
			"type": "string",
			"defaultValue": "cntleap"
		},
		"LeapDataMovementDaily_properties_LeapDataMovementDaily_parameters_Directory": {
			"type": "string",
			"defaultValue": "@{concat('/', formatDateTime(trigger().scheduledTime, 'yyyy'), '/', formatDateTime(trigger().scheduledTime, 'MM'), '/', formatDateTime(trigger().scheduledTime, 'dd'), '/')}"
		},
		"NewLeapDataProcessing_properties_LeapDataFullProcessDaily_V2_parameters_DataProcessDate": {
			"type": "string",
			"defaultValue": "@{formatDateTime(utcNow(),'dd-MMM-yyyy')}"
		},
		"NewLeapDataProcessing_properties_LeapDataFullProcessDaily_V2_parameters_Container": {
			"type": "string",
			"defaultValue": "cntleap"
		},
		"NewLeapDataProcessing_properties_LeapDataFullProcessDaily_V2_parameters_Directory": {
			"type": "string",
			"defaultValue": "@{concat('/', formatDateTime(trigger().scheduledTime, 'yyyy'), '/', formatDateTime(trigger().scheduledTime, 'MM'), '/', formatDateTime(trigger().scheduledTime, 'dd'), '/')}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/FocusBrandLoading')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "FocusBrandLoading-LEAP-TO-DF",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-02-28T09:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapFileLoading_WithoutProcessing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LeapDataMovement_WithoutLoading",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('LeapFileLoading_WithoutProcessing_properties_LeapDataMovement_WithoutLoading_parameters_windowStart')]",
							"windowEnd": "[parameters('LeapFileLoading_WithoutProcessing_properties_LeapDataMovement_WithoutLoading_parameters_windowEnd')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-03-02T08:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSSUBDDataLoadingFromAstixServer_Day')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "NCSDataTransfer-ASTIX-TO-DF",
							"type": "PipelineReference"
						},
						"parameters": {
							"ProcessingType": "[parameters('NCSSUBDDataLoadingFromAstixServer_Day_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-03-10T14:00:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/NCSSUBDDataLoadingFromAstixServer_Night')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "NCSDataTransfer-ASTIX-TO-DF",
							"type": "PipelineReference"
						},
						"parameters": {
							"ProcessingType": "[parameters('NCSSUBDDataLoadingFromAstixServer_Night_properties_NCSDataTransfer-ASTIX-TO-DF_parameters_ProcessingType')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-03-10T04:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								10
							],
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud1Processing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 1 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(variables('MaxNoofCheck'),variables('CurrentCountNoofCheck'))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud1').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud1",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud1Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "1"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud1Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud1Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											}
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "2"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud2Processing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 2 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(variables('MaxNoofCheck'),variables('CurrentCountNoofCheck'))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud2').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud2",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud2Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "2"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud2Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud2Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											}
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "2"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Cloud3Processing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until Cloud 3 Processing Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@or(not(equals(variables('flgFullProcessingPending'), '1')),\nnot(greaterOrEquals(variables('MaxNoofCheck'),variables('CurrentCountNoofCheck'))))\n",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Set flgFullProcessingPending",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "flgFullProcessingPending",
										"value": {
											"value": "@string(activity('SpGetCloudFileLoadingStatus_Cloud3').output.firstRow.flgLoadingDone)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "SpGetCloudFileLoadingStatus_Cloud3",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "Cloud3Pipeline",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlDWSource",
											"sqlReaderStoredProcedureName": "[[dbo].[SpGetCloudFileLoadingStatus]",
											"storedProcedureParameters": {
												"CloudInstance": {
													"type": "Byte",
													"value": "3"
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DataFoundationConnectionV2",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "Set CurrentCountNoofCheck",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "SpGetCloudFileLoadingStatus_Cloud3",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentCountNoofCheck",
										"value": {
											"value": "@string(add(int(variables('PreviousCountNoofCheck')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Count Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousCountNoofCheck",
										"value": {
											"value": "@variables('CurrentCountNoofCheck')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Cloud3Pipeline",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Count Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Cloud3Pipeline",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataProcessDate",
												"type": "Expression"
											},
											"CycleID": {
												"value": "@pipeline().parameters.CycleID",
												"type": "Expression"
											}
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					}
				},
				"variables": {
					"flgFullProcessingPending": {
						"type": "String",
						"defaultValue": "1"
					},
					"MaxNoofCheck": {
						"type": "String",
						"defaultValue": "2"
					},
					"CurrentCountNoofCheck": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousCountNoofCheck": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataMovementDaily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LeapDataMovementDaily",
							"type": "PipelineReference"
						},
						"parameters": {
							"windowStart": "[parameters('LeapDataMovementDaily_properties_LeapDataMovementDaily_parameters_windowStart')]",
							"windowEnd": "[parameters('LeapDataMovementDaily_properties_LeapDataMovementDaily_parameters_windowEnd')]",
							"DataProcessDate": "[parameters('LeapDataMovementDaily_properties_LeapDataMovementDaily_parameters_DataProcessDate')]",
							"Container": "[parameters('LeapDataMovementDaily_properties_LeapDataMovementDaily_parameters_Container')]",
							"Directory": "[parameters('LeapDataMovementDaily_properties_LeapDataMovementDaily_parameters_Directory')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-03-11T07:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								5
							],
							"hours": [
								6
							]
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MiddleDFProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Cloud1Processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Cloud1Processing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataProcessDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								},
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Cloud2Processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Cloud2Processing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataProcessDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								},
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Cloud3Processing",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Cloud3Processing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataProcessDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								},
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					}
				},
				"variables": {
					"flgCloud1LoadingDone": {
						"type": "Boolean",
						"defaultValue": false
					},
					"flgCloud2LoadingDone": {
						"type": "Boolean",
						"defaultValue": false
					},
					"flgCloud3LoadingDone": {
						"type": "Boolean",
						"defaultValue": false
					},
					"flgCloud1ProcessingDone": {
						"type": "Boolean",
						"defaultValue": false
					},
					"flgCloud2ProcessingDone": {
						"type": "Boolean",
						"defaultValue": false
					},
					"flgCloud3ProcessingDone": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Cloud1Processing')]",
				"[concat(variables('factoryId'), '/pipelines/Cloud2Processing')]",
				"[concat(variables('factoryId'), '/pipelines/Cloud3Processing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataFullProcessDaily_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DW_Resume_Scale_V2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Resume_Scale_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ScaleVal": "DW200c"
							}
						}
					},
					{
						"name": "SpCheckAllFileProcessStatus",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "spDataLoadSBDMasterData_Cloud",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "FocusBrandLoading-LEAP-TO-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckAllFileProcessStatus]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If All Final Table Loaded",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpCheckAllFileProcessStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('SpCheckAllFileProcessStatus').output.firstRow.flgProcessingDone,1 )",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "FinalDFProcessing",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "DW_Scale_400",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "FinalDFProcessing",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "DW_Scale_400",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DW_Scale_V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Scaleval": "DW400c"
										}
									}
								},
								{
									"name": "DW_Scale_200",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "FinalDFProcessing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DW_Scale_V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Scaleval": "DW200c"
										}
									}
								},
								{
									"name": "SQL_Scale S3 50 DTU",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "FinalDFProcessing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SQL_Scale",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Scaleval": "S3",
											"tier": "Standard"
										}
									}
								},
								{
									"name": "CopyLeapStaging-To-ADLS-AllCloudFiles",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "DW_Scale_200",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyLeapStaging-To-ADLS-AllCloudFiles",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "Loading Temp and Final Tables",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DW_Resume_Scale_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MiddleDFProcessing",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"DataProcessDate": {
									"value": "@pipeline().parameters.DataProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "spDataLoadSBDMasterData_Cloud",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Loading Temp and Final Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadSBDMasterData_Cloud]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FocusBrandLoading-LEAP-TO-DF",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Loading Temp and Final Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FocusBrandLoading-LEAP-TO-DF_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_COHGAP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SQL_Scale S6 400 DTU",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_COHGAP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "APIDeleteOLDFilesinFolder",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DW_Resume_Scale_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDeleteOLDFilesinFolder",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Wait 1 hour",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "DW_Resume_Scale_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 3600
						}
					},
					{
						"name": "SQL_Scale S6 400 DTU",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Wait 1 hour",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S6",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "spDailyRefreshSchemeData-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SQL_Scale S6 400 DTU",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDailyRefreshSchemeData]",
							"storedProcedureParameters": {
								"IsFullProcessRunning": {
									"value": "1",
									"type": "Byte"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/MiddleDFProcessing')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/NewLeapDataProcessing')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "LeapDataFullProcessDaily_V2",
							"type": "PipelineReference"
						},
						"parameters": {
							"DataProcessDate": "[parameters('NewLeapDataProcessing_properties_LeapDataFullProcessDaily_V2_parameters_DataProcessDate')]",
							"Container": "[parameters('NewLeapDataProcessing_properties_LeapDataFullProcessDaily_V2_parameters_Container')]",
							"Directory": "[parameters('NewLeapDataProcessing_properties_LeapDataFullProcessDaily_V2_parameters_Directory')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-05-09T04:43:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								45
							],
							"hours": [
								4
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/LeapDataFullProcessDaily_V2')]"
			]
		}
	]
}