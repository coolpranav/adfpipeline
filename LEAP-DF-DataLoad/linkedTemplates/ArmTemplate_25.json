{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "LEAP-DF-DataLoad"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataProcessing')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until All Set Done",
						"type": "Until",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@not(greaterOrEquals(variables('NoOFTotalSets'),variables('CurrentSetNo')))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "LeapDataProcessing-Step1",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Set Completed",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "LeapDataProcessing-Set",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CloudInstance": {
												"value": "@pipeline().parameters.CloudInstance",
												"type": "Expression"
											},
											"Step": {
												"value": "@variables('CurrentSetNo')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Set Completed Count",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "LeapDataProcessing-Step1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentSetNo",
										"value": {
											"value": "@string(add(int(variables('PreviousSetNo')),1))",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Completed",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "PreviousSetNo",
										"value": {
											"value": "@variables('CurrentSetNo')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Completed Count_copy1",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "LeapDataProcessing-Step1",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "CurrentSetNo",
										"value": {
											"value": "@string(add(int(variables('PreviousSetNo')),1))",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "7.00:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CloudInstance": {
						"type": "string"
					}
				},
				"variables": {
					"NoOFTotalSets": {
						"type": "String",
						"defaultValue": "8"
					},
					"CurrentSetNo": {
						"type": "String",
						"defaultValue": "1"
					},
					"PreviousSetNo": {
						"type": "String",
						"defaultValue": "0"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoveADLS-To-dfdatafoundation_Level3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Move files from one folder to another folder",
				"activities": [
					{
						"name": "GetFoldername",
						"description": "Get the list of file",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ADLSBinaryDataSource_Folder",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SourceStore_Container",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SourceStore_Directory",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							},
							"formatSettings": {
								"type": "BinaryReadSettings"
							}
						}
					},
					{
						"name": "ForEachFoldername",
						"description": "Iterate each folder and find the folder or file inside it.",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FilterFolder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FilterFolder').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 20,
							"activities": [
								{
									"name": "inner folder loop",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "MoveADLS-To-dfdatafoundation_Level4",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"SourceStore_Container": {
												"value": "@pipeline().parameters.SourceStore_Container",
												"type": "Expression"
											},
											"SourceStore_Directory": {
												"value": "@concat(pipeline().parameters.SourceStore_Directory, item().name ,'/')\n\n",
												"type": "Expression"
											},
											"DestinationStore_Container": {
												"value": "@pipeline().parameters.DestinationStore_Container",
												"type": "Expression"
											},
											"DestinationStore_Directory": {
												"value": "@pipeline().parameters.DestinationStore_Directory",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "FilterFolder",
						"description": "Only files will be selected, the source-folders will not be selected.",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "GetFoldername",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFoldername').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().type, 'Folder')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"SourceStore_Container": {
						"type": "String"
					},
					"SourceStore_Directory": {
						"type": "String"
					},
					"DestinationStore_Container": {
						"type": "String"
					},
					"DestinationStore_Directory": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Other Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-17T07:39:01Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT ProcessDate FROM tmpDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DF_NC_RouteCalendar_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteOldtmpleapdata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Container": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(item().ProcessDate, 'yyyy'), '/', formatDateTime(item().ProcessDate, 'MM'), '/', formatDateTime(item().ProcessDate, 'dd'), '/')\n",
												"type": "Expression"
											},
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SpDeleteOldtmpleapdata",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpDeleteDatafromtmpleaptable]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spLoadLeapDPSRIndividualProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SingleFileCopy",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapDPSRIndividualProcess]",
										"storedProcedureParameters": {
											"dt": {
												"value": {
													"value": "@item().ProcessDate",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading_CCCR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT ProcessDate FROM tmpDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DF_NC_RouteCalendar_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy_CCCR",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteOldtmpleapdata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy_CCCR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Container": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(item().ProcessDate, 'yyyy'), '/', formatDateTime(item().ProcessDate, 'MM'), '/', formatDateTime(item().ProcessDate, 'dd'), '/')\n",
												"type": "Expression"
											},
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SpDeleteOldtmpleapdata",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spTruncateCCCRData]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spLoadLeapDPSRIndividualProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SingleFileCopy_CCCR",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading_Onefile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SingleFileCopy_Onefile",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteOldtmpleapdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SingleFileCopy_Onefile",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Container": "cntleap",
								"Folder": {
									"value": "@concat('/cochinfeb20psr', '/')\n",
									"type": "Expression"
								},
								"ProcessDate": {
									"value": "@pipeline().parameters.ProcessDate",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SpDeleteOldtmpleapdata",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteDatafromtmpleaptable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spLoadLeapDPSRIndividualProcess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "SingleFileCopy_Onefile",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spLoadLeapDPSRIndividualProcess]",
							"storedProcedureParameters": {
								"dt": {
									"value": {
										"value": "@pipeline().parameters.ProcessDate",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"ProcessDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinglefileDataLoading_RTDXFormat')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT ProcessDate FROM tmpDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_DF_NC_RouteCalendar_SUBD",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy_RTDXFormat",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "SpDeleteOldtmpleapdata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy_RTDXFormat",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Container": "cntleap",
											"Folder": {
												"value": "@concat('Site PSR Data/', formatDateTime(item().ProcessDate, 'yyyy'), '/', formatDateTime(item().ProcessDate, 'MM'), '/', formatDateTime(item().ProcessDate, 'dd'),formatDateTime(item().ProcessDate, 'MM'),formatDateTime(item().ProcessDate, 'yyyy'), '/')\n",
												"type": "Expression"
											},
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "SpDeleteOldtmpleapdata",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[SpDeleteDatafromtmpleaptable]"
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "spLoadLeapDPSRIndividualProcess",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "SingleFileCopy_RTDXFormat",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spLoadLeapDPSRIndividualProcess]",
										"storedProcedureParameters": {
											"dt": {
												"value": {
													"value": "@item().ProcessDate",
													"type": "Expression"
												},
												"type": "DateTime"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DataFoundationDB",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASDataUpdate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "RetailerFlagUpdate",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RetailerFlagUpdate",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TeleCallerListForDay",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "RetailerFlagUpdate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TeleCallerListForDay",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TASOrderLog')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TASOrderLog_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TASOrderLog_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TASOrderLog_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TASOrderLog_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TASOrderLog_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "TASOrderLog_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "TASOrderLog_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TASOrderLog_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "TASOrder"
				},
				"annotations": [],
				"lastPublishTime": "2021-02-16T14:36:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WinITCCCRDataLoading')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_ProcessDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderQuery": "SELECT FORMAT(ProcessDate,'dd-MMM-yy') ProcessDate FROM tmpWinITCCCRDateDataTobeProcess WHERE flgProcess=0 ORDER BY ProcessDate",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDates",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_ProcessDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_ProcessDate').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SingleFileCopy_WINITCCCR",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "SingleFileCopy_WINITCCCR",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"ProcessDate": {
												"value": "@item().ProcessDate",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "spDataLoadRawLEAPTAS_CCCR_SubD",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ForEachDates",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR_SubD]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "WINIT Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FinalDFProcessing_14Oct2022')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "spGetDFParameterDetail",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spGetDFParameterDetail]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "spTAS_DailyDataRefreshSalesData-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTAS_DailyDataRefreshSalesData]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spRolloverDataLoad-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spTAS_MapTeleCallingInvDetail-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spLoadRollOverDayZeroData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spRunForFiveStar-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spRolloverDataLoad-TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spRunForFiveStar]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spCalculateLSSSchemeAgainstActData-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spRunForFiveStar-TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spCalculateLSSSchemeAgainstActData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spCalculateLuckDrawStore-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spTAS_UpdateTeleCallingActGPPoints-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spCalculateLuckDrawStore]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDF_GenerateInvWiseNetSales-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDF_GenerateInvWiseNetSales]",
							"storedProcedureParameters": {
								"Rptmonthyear": {
									"value": {
										"value": "@activity('spGetDFParameterDetail').output.firstRow.RptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spDFTAS_PopulateSBDWorkingData-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDF_GenerateInvWiseNetSales-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDFTAS_PopulateSBDWorkingData]",
							"storedProcedureParameters": {
								"RptMonthYear": {
									"value": {
										"value": "@activity('spGetDFParameterDetail').output.firstRow.SBDRptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spTAS_PopulateSBDGaps-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDFTAS_PopulateSBDWorkingData-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTAS_PopulateSBDGaps]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spAPI_PopulateExtractIDCMP-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spAPI_PopulateExtractIDCMP]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spAS_PopulateDimTables-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spAS_PopulateDimTables]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spAS_PopulateFactTables-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spAS_PopulateDimTables-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "spTAS_MapTeleCallingInvDetail-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "spPopulateTASFutureDateInRouteCalendar-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spAS_PopulateFactTables]",
							"storedProcedureParameters": {
								"DMinus1Date": {
									"value": {
										"value": "@activity('spGetDFParameterDetail').output.firstRow.DMinusOneDate",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spAPI_PopulateAPIBaseTables-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spAS_PopulateFactTables-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spAPI_PopulateAPIBaseTables]",
							"storedProcedureParameters": {
								"DMinusOneDate": {
									"value": {
										"value": "@activity('spGetDFParameterDetail').output.firstRow.DMinusOneDate",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spTAS_PopulateSchemeApplied-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTAS_PopulateSchemeApplied]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spTAS_PopActiveSBFFrmInv-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTAS_PopActiveSBFFrmInv]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spPopulateSchemeData-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateSchemeData]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "MasterDataForAPI",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spAPI_PopulateExtractIDCMP-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "MasterDataForAPI",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "APIDataFileGeneration",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "MasterDataForAPI",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "APIDataFileGeneration",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send Success Notification",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "APIDataFileGeneration",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Send Notification",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"EmailTo": "Avinash@astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com,ramesh@astix.in,varun@astix.in,helpdesk@astix.in,project.tl@orientindia.net",
								"Subject": "API Process Success",
								"ErrorMessage": "API process and files generated successful"
							}
						}
					},
					{
						"name": "AS_CubeProcess_Sync_Fact",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DW_Resume_Scale DW200_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_CubeProcess_Sync_Fact",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spPopulateFactSBDData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spDFTAS_PopulateSBDWorkingData-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateFactSBDData]",
							"storedProcedureParameters": {
								"RptMonthYear": {
									"value": {
										"value": "@activity('spGetDFParameterDetail').output.firstRow.SBDRptMonthYear",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spTAS_PopulateStoreDSEWiseSales-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTAS_PopulateStoreDSEWiseSales]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SQL_Scale S6 400 DTU",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spCalculateLuckDrawStore-TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "spTAS_PopActiveSBFFrmInv-TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "spPopulateSchemeData-TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "spTAS_PopulateStoreSchemeDistributionCount-TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "TransferInvDetails",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL_Scale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Scaleval": "S6",
								"tier": "Standard"
							}
						}
					},
					{
						"name": "AS_ResumeandScale",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spAS_PopulateFactTables-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AS_ResumeandScale",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spTAS_MapTeleCallingInvDetail-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spTAS_DailyDataRefreshSalesData-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTAS_MapTeleCallingInvDetail]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "FiveStar Data Transfer",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "spCalculateLSSSchemeAgainstActData-TAS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "DFPolybaseStagingStorageLink",
									"type": "LinkedServiceReference"
								},
								"path": "polybasestaging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "TeleCallingId",
											"type": "Int32"
										},
										"sink": {
											"name": "TeleCallingId",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "GPPoints",
											"type": "Byte"
										},
										"sink": {
											"name": "GPPoints",
											"type": "Byte"
										}
									},
									{
										"source": {
											"name": "ParameterId",
											"type": "Byte"
										},
										"sink": {
											"name": "ParameterId",
											"type": "Byte"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DS_TAS_tmpTeleCallingFiveStarGPPoints",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_tmpTAS_FiveStarGPPoints",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "spTAS_UpdateTeleCallingActGPPoints-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FiveStar Data Transfer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTAS_UpdateTeleCallingActGPPoints]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spTAS_SmartBasketPopulateBaseDetail-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spAS_PopulateFactTables-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTAS_SmartBasketPopulateBaseDetail]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spTAS_PopulateStoreSchemeDistributionCount-TAS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spTAS_PopulateSchemeApplied-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spTAS_PopulateStoreSchemeDistributionCount]"
						},
						"linkedServiceName": {
							"referenceName": "TASDatabase_Check",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DW_Resume_Scale DW200_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_ResumeandScale",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "spPopulateFactSBDData",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "spAPI_PopulateAPIBaseTables-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "RetailerFlagUpdate",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "spTAS_SmartBasketPopulateBaseDetail-DF",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "spSubdHawkeyePopuldateData",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "spSniDbrPopulateTables",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DW_Resume_Scale_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ScaleVal": "DW200c"
							}
						}
					},
					{
						"name": "spSubdHawkeyePopuldateData",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spAS_PopulateFactTables-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spSubdHawkeyePopuldateData]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "spSniDbrPopulateTables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spAS_PopulateFactTables-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spSniDbrPopulateTables]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "RetailerFlagUpdate",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spTAS_MapTeleCallingInvDetail-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "RetailerFlagUpdate",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "AR Data Transfer",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AR Data Transfer",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Maximus Rurban Split",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "AS_CubeProcess_Sync_Fact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Maximus Rurban Split",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spPopulateTASFutureDateInRouteCalendar-DF",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "spGetDFParameterDetail",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spPopulateTASFutureDateInRouteCalendar]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "TransferInvDetails",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "spTAS_MapTeleCallingInvDetail-DF",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "TransferInvDetails",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CCCRDataProcessing_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SpCheckCCCRMorningProcessingDone",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckCCCRMorningProcessingDone]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "When Morning CCCR Processing Done",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpCheckCCCRMorningProcessingDone",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('SpCheckCCCRMorningProcessingDone').output.firstRow.flgMorningProcessingDone\n",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyS3-To-Staging-V2",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyS3-To-Staging-Onefile-V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"windowStart": {
												"value": "@pipeline().parameters.windowStart",
												"type": "Expression"
											},
											"windowEnd": {
												"value": "@pipeline().parameters.windowEnd",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "CopyStaging-To-DB-CCCR-V2",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "CopyS3-To-Staging-V2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyStaging-To-DB-CCCR-V2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"CycleID": {
												"value": "@activity('SpCycleStart').output.firstRow.CycleID",
												"type": "Expression"
											},
											"DataProcessDate": {
												"value": "@pipeline().parameters.DataDate",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "spProcessDayZeroDataProcessing",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyStaging-To-DB-CCCR-V2",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[spProcessDayZeroDataProcessing]"
									},
									"linkedServiceName": {
										"referenceName": "TASDatabase_Check",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "CopyLeapStaging-To-ADLS-AllCloudFiles",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "CopyLeapStaging-To-CCCRStorage",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyLeapStaging-To-ADLS-AllCloudFiles",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Directory": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "CopyLeapStaging-To-CCCRStorage",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "spProcessDayZeroDataProcessing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyLeapStaging-To-CCRStorage",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataDate": {
						"type": "string"
					},
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CFRDataProcessing_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyStaging-To-DB-CFR-V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyStaging-To-DB-CFR-V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataProcessDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataDate": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FocusBrandLoading-LEAP-TO-DF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FileTransferfromS3toAzure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteFocusbrandTmpTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyRTDXS3-To-Staging",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FocusbrandLoadingtoDB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FileTransferfromS3toAzure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyRTDX_Staging-To-DB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spDataLoadFocusBrand",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FocusbrandLoadingtoDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadFocusBrand]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpDeleteFocusbrandTmpTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteFocusbrandTmpTable]"
						},
						"linkedServiceName": {
							"referenceName": "DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FocusBrandLoading-LEAP-TO-DF_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FileTransferfromS3toAzure",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpDeleteFocusbrandTmpTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyRTDXS3-To-Staging",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "FocusbrandLoadingtoDB",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "FileTransferfromS3toAzure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyRTDX_Staging-To-DB_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "spDataLoadFocusBrand",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "FocusbrandLoadingtoDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[spDataLoadFocusBrand]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SpDeleteFocusbrandTmpTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SpDeleteFocusbrandTmpTable]"
						},
						"linkedServiceName": {
							"referenceName": "Dev_DataFoundationDB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Leap Data Pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataFullProcessDaily_V2_22Sep2022')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCheckAllFileProcessStatus",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckAllFileProcessStatus]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If All Final Table Loaded",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpCheckAllFileProcessStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('SpCheckAllFileProcessStatus').output.firstRow.flgProcessingDone,1 )",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send Notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "FinalDFProcessing",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Wait1 Second",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "FinalDFProcessing",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "CopyLeapStaging-To-ADLS-AllCloudFiles",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "FinalDFProcessing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyLeapStaging-To-ADLS-AllCloudFiles",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Directory": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Wait1 Second",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataFullProcessDaily_V2_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SpCheckAllFileProcessStatus",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCheckAllFileProcessStatus]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If All Final Table Loaded",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "SpCheckAllFileProcessStatus",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('SpCheckAllFileProcessStatus').output.firstRow.flgProcessingDone,1 )",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Send Notification",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Send Notification",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "FinalDFProcessing",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Wait1 Second",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "FinalDFProcessing",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "CopyLeapStaging-To-ADLS-AllCloudFiles",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "FinalDFProcessing",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "CopyLeapStaging-To-ADLS-AllCloudFiles",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"Directory": "cntleap",
											"Folder": {
												"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "AR Data Transfer",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Wait1 Second",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "AR Data Transfer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								},
								{
									"name": "Wait1 Second",
									"type": "Wait",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 1
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataProcessDate": {
						"type": "string"
					},
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-13T19:05:55Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataLoadingCloud1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_Cloud1_1_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud1_2_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud1_1_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud1_3_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud1_2_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud1_4_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud1_3_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_4_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud1_5_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud1_4_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_5_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud1_6_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud1_5_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_6_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_7_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud1_6_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_7_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_DistributorLevel_9",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_8_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_DistributorLevel_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_8_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_7_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_8_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CCCR_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_DistributorLevel_9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CFR_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_CCCR_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CFR_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"Cloud": {
						"type": "int"
					},
					"DataDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					},
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataLoadingCloud2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_Cloud2_1_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud2_2_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud2_1_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud2_3_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud2_2_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud2_4_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud2_3_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_4_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud2_5_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud2_4_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_5_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud2_6_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud2_5_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_6_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud2_7_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud2_6_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_7_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud2_DistributorLevel_9",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud2_8_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_DistributorLevel_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud2_8_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud2_7_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_8_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud2_CCCR_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud2_DistributorLevel_9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CFR_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud2_CCCR_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CFR_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CycleID": {
						"type": "int"
					},
					"DataDate": {
						"type": "string"
					},
					"Cloud": {
						"type": "int"
					},
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataLoadingCloud3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_1_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_2_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_1_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_2_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_3_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_2_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_3_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_4_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_3_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_4_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_5_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_4_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_5_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_6_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_5_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_6_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_7_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_6_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_7_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_DistributorLevel_9",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_8_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_DistributorLevel_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_8_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_7_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_8_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_Cloud3_CCCR_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_DistributorLevel_9",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CFR_V2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_Cloud3_CCCR_V2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CFR_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@pipeline().parameters.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": {
									"value": "@pipeline().parameters.Cloud",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"windowStart": {
									"value": "@pipeline().parameters.windowStart",
									"type": "Expression"
								},
								"windowEnd": {
									"value": "@pipeline().parameters.windowEnd",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"CycleID": {
						"type": "int"
					},
					"DataDate": {
						"type": "string"
					},
					"Cloud": {
						"type": "int"
					},
					"windowStart": {
						"type": "string"
					},
					"windowEnd": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LeapDataLoading_CCCR_V2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyS3-To-Staging_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud1_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud1",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": "1"
							}
						}
					},
					{
						"name": "LeapCCCRDataProcessing_Cloud1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR_Cloud1]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SpCycleStart",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[SpCycEntry]",
								"storedProcedureParameters": {
									"flgInOut": {
										"type": "Byte",
										"value": "1"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud2_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud2",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": "2"
							}
						}
					},
					{
						"name": "LeapCCCRDataProcessing_Cloud2",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR_Cloud2]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "CopyS3-To-Staging_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SpCycleStart",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyS3-To-Staging_Cloud3_V2",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud3",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyS3-To-Staging_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"CycleID": {
									"value": "@activity('SpCycleStart').output.firstRow.CycleID",
									"type": "Expression"
								},
								"DataDate": {
									"value": "@pipeline().parameters.DataDate",
									"type": "Expression"
								},
								"Cloud": "3"
							}
						}
					},
					{
						"name": "LeapCCCRDataProcessing_Cloud3",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "CopyLeap_Staging-To-DB_CCCR_V2_Cloud3",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlDWSource",
								"sqlReaderStoredProcedureName": "[[dbo].[spDataLoadRawLEAPTAS_CCCR_Cloud3]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFoundationConnectionV2",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"DataDate": {
						"type": "string"
					},
					"CycleID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "V2 Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}