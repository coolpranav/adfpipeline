{
	"name": "CopyRTDX_Staging-To-DB",
	"properties": {
		"description": "Copy file data from Staging to DB",
		"activities": [
			{
				"name": "GetFileList",
				"description": "Get the list of file",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "RTDXStorageSourceDataset",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems",
						"lastModified",
						"itemName"
					],
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "ForEachFile",
				"description": "Iterate each file, and move them one by one.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "FilterFiles",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('FilterFiles').output.value",
						"type": "Expression"
					},
					"batchCount": 20,
					"activities": [
						{
							"name": "SpFileEntry",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "spGetFileID",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[SpFileEntry]",
								"storedProcedureParameters": {
									"Filename": {
										"value": {
											"value": "@item().name",
											"type": "Expression"
										},
										"type": "String"
									},
									"FileType": {
										"value": "1",
										"type": "Byte"
									},
									"LastModifiedDatetime": {
										"value": {
											"value": "@activity('GetFileList').output.lastModified",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"FileID": {
										"value": {
											"value": "@activity('spGetFileID').output.firstRow.FileID",
											"type": "Expression"
										},
										"type": "Int16"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "DataFoundationDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "spGetFileID",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlDWSource",
									"sqlReaderStoredProcedureName": "[dbo].[SpGetFileID]",
									"storedProcedureParameters": {
										"FileName": {
											"type": "String",
											"value": {
												"value": "@item().name",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "DS_ATTN_table",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "IfFileFound",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "SpFileEntry",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@string(activity('spGetFileID').output.firstRow.FileID)",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "43",
										"activities": [
											{
												"name": "DTA_FOCUS_Cloud1",
												"description": "Copy a file from the source store to the destination store.",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"additionalColumns": [
															{
																"name": "Filename",
																"value": {
																	"value": "@item().name",
																	"type": "Expression"
																}
															},
															{
																"name": "LastModifiedDatetime",
																"value": {
																	"value": "@activity('GetFileList').output.lastModified",
																	"type": "Expression"
																}
															}
														],
														"storeSettings": {
															"type": "AzureBlobStorageReadSettings",
															"recursive": true,
															"wildcardFileName": "DTA_Focus_cloud01_*",
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														},
														"recursive": false
													},
													"sink": {
														"type": "SqlDWSink",
														"allowPolyBase": true,
														"polyBaseSettings": {
															"rejectValue": 0,
															"rejectType": "value",
															"useTypeDefault": true
														}
													},
													"enableStaging": true,
													"stagingSettings": {
														"linkedServiceName": {
															"referenceName": "DFPolybaseStagingStorageLink",
															"type": "LinkedServiceReference"
														},
														"path": "polybasestaging"
													},
													"dataIntegrationUnits": 2,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"sink": {
																	"name": "Month",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Distributor Branch Code",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "SubDistributor Code",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Seller Code",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Seller Route",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Seller Sector",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Brand Code",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Brand Initiative Code",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Brand Initiative Name",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Local Subchannel Code",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Customer Type",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "NormWiseTarget(%)",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "DstrbnTarget(%)",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Store Code",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Store Focus Brand Opportunity",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Store Focus Brand Hit",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "Store Gap",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "BranchSubDNodeId",
																	"type": "Int32"
																}
															},
															{
																"sink": {
																	"name": "BranchSubDNodeType",
																	"type": "Int32"
																}
															},
															{
																"sink": {
																	"name": "DSENodeId",
																	"type": "Int32"
																}
															},
															{
																"sink": {
																	"name": "DSENodeType",
																	"type": "Int32"
																}
															},
															{
																"sink": {
																	"name": "BrandNodeId",
																	"type": "Int32"
																}
															},
															{
																"sink": {
																	"name": "BrandNodeType",
																	"type": "Int32"
																}
															},
															{
																"sink": {
																	"name": "ChannelId",
																	"type": "Int32"
																}
															},
															{
																"sink": {
																	"name": "SubChannelId",
																	"type": "Int32"
																}
															},
															{
																"sink": {
																	"name": "StoreId",
																	"type": "Int32"
																}
															},
															{
																"sink": {
																	"name": "SectorId",
																	"type": "Int32"
																}
															},
															{
																"source": {
																	"name": "Filename",
																	"type": "String"
																},
																"sink": {
																	"name": "FileName",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "LastModifiedTime",
																	"type": "String"
																}
															},
															{
																"sink": {
																	"name": "FileSetId",
																	"type": "Int32"
																}
															},
															{
																"sink": {
																	"name": "FBID",
																	"type": "Int32"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "RTDXCSV_Staging",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "DS_DTA_FOCUS",
														"type": "DatasetReference"
													}
												]
											}
										]
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "FilterFiles",
				"description": "Only files will be selected, the source-folders will not be selected.",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "GetFileList",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileList').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@equals(item().type, 'File')",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"SourceStore_Location": {
				"type": "String"
			},
			"SourceStore_Directory": {
				"type": "String"
			},
			"DestinationStore_Location": {
				"type": "String"
			},
			"DestinationStore_Directory": {
				"type": "String"
			}
		},
		"folder": {
			"name": "Leap Data Pipeline"
		},
		"annotations": [],
		"lastPublishTime": "2021-01-04T16:41:12Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}