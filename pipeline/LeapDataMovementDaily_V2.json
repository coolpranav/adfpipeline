{
	"name": "LeapDataMovementDaily_V2",
	"properties": {
		"activities": [
			{
				"name": "CopyLeap_Staging-To-DB_WithDPSR_V2",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "SpDeleteOldtmpleapdata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CopyLeap_Staging-To-DB_WithDPSR_V2",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"CycleID": {
							"value": "@activity('SpCycleStart').output.CycleID",
							"type": "Expression"
						},
						"DataDate": {
							"value": "@pipeline().parameters.DataProcessDate",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SpDeleteOldtmpleapdata",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "SpCycleStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[SpDeleteOLDDatafromtmpleaptables]"
				},
				"linkedServiceName": {
					"referenceName": "DataFoundationDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "CopyLeap_Staging-To-DB_2_V2",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "CopyLeap_Staging-To-DB_WithDPSR_V2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CopyLeap_Staging-To-DB_2_V2",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"CycleID": {
							"value": "@activity('SpCycleStart').output.CycleID",
							"type": "Expression"
						},
						"DataDate": {
							"value": "@pipeline().parameters.DataProcessDate",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Delete Staging Files",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "CopyLeapStaging-To-ADLS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "LeapStorageSourceDataset",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "CopyLeap_Staging-To-DB_3_V2",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "CopyLeap_Staging-To-DB_2_V2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CopyLeap_Staging-To-DB_3_V2",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"CycleID": {
							"value": "@activity('SpCycleStart').output.CycleID",
							"type": "Expression"
						},
						"DataDate": {
							"value": "@pipeline().parameters.DataProcessDate",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "spLoadLeapTasIntegration",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "CopyLeap_Staging-To-DB_4_V2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spLoadLeapTasIntegration]"
				},
				"linkedServiceName": {
					"referenceName": "DataFoundationDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "CopyLeapStaging-To-ADLS",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "spLoadLeapTasIntegration",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CopyLeapStaging-To-ADLS",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Directory": "cntleap",
						"Folder": {
							"value": "@concat('/', formatDateTime(pipeline().TriggerTime, 'yyyy'), '/', formatDateTime(pipeline().TriggerTime, 'MM'), '/', formatDateTime(pipeline().TriggerTime, 'dd'), '/')",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "DFDataOlapProcess",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "FocusBrandLoading-LEAP-TO-DF",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "DFDataOlapProcessing",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataDate": {
							"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "DW_Scale_200",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "AS_CubeProcess_Sync_Fact",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Send Success Notification",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "DW_Scale",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"Scaleval": "DW200c"
					}
				}
			},
			{
				"name": "FocusBrandLoading-LEAP-TO-DF",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "spLoadLeapTasIntegration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "FocusBrandLoading-LEAP-TO-DF",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "AS_Resume",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "DFDataOlapProcess",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "AS_Resume",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "AS_Resume",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 300
				}
			},
			{
				"name": "AS_CubeProcess_Sync_Fact",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "AS_CubeProcess_Sync_Fact",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Send Notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "SpDeleteOldtmpleapdata",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "CopyLeap_Staging-To-DB_WithDPSR_V2",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "CopyLeap_Staging-To-DB_2_V2",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "CopyLeap_Staging-To-DB_3_V2",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "spLoadLeapTasIntegration",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "FocusBrandLoading-LEAP-TO-DF",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "DFDataOlapProcess",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "AS_Resume",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "AS_CubeProcess_Sync_Fact",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "DW_Scale_200",
						"dependencyConditions": [
							"Failed"
						]
					},
					{
						"activity": "CopyLeap_Staging-To-DB_4_V2",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Send Notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com",
						"Subject": "DataFoundation DataLoading Fails ",
						"ErrorMessage": "Processing Fails , login to Portal for more deatils."
					}
				}
			},
			{
				"name": "CopyLeap_Staging-To-DB_4_V2",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "CopyLeap_Staging-To-DB_3_V2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "CopyLeap_Staging-To-DB_4_V2",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"CycleID": {
							"value": "@activity('SpCycleStart').output.CycleID",
							"type": "Expression"
						},
						"DataDate": {
							"value": "@pipeline().parameters.DataProcessDate",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "API All Extract Data Populate",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "DFDataAPIProcess",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spPopulateAPIAllExtract]"
				},
				"linkedServiceName": {
					"referenceName": "DataFoundationDB",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "APIDataFileGeneration",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "MasterDataForAPI",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "APIDataFileGeneration",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "MasterDataForAPI",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "API All Extract Data Populate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "MasterDataForAPI",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true
				}
			},
			{
				"name": "Send Success Notification",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "APIDataFileGeneration",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "Send Notification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"EmailTo": "Avinash@astix.in,Ashwani@Astix.in,Alok@astix.in,gaurav@astix.in,phegade.md@pg.com,bussa.r@pg.com",
						"Subject": "API Process Success",
						"ErrorMessage": "API process and files generated successful"
					}
				}
			},
			{
				"name": "DFDataAPIProcess",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "FocusBrandLoading-LEAP-TO-DF",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "DFDataAPIProcessing",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataDate": {
							"value": "@adddays(formatDateTime(pipeline().parameters.DataProcessDate,'dd-MMM-yyyy'),0)",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "SpCycleStart",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[SpCycEntry]",
					"storedProcedureParameters": {
						"flgInOut": {
							"value": "1",
							"type": "Byte"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "DataFoundationDB",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"windowStart": {
				"type": "string"
			},
			"windowEnd": {
				"type": "string"
			},
			"DataProcessDate": {
				"type": "string"
			},
			"Container": {
				"type": "string"
			},
			"Directory": {
				"type": "string"
			}
		},
		"folder": {
			"name": "Leap Data Pipeline"
		},
		"annotations": [],
		"lastPublishTime": "2020-12-13T19:05:55Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}