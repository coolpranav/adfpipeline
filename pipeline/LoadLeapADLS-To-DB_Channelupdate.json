{
	"name": "LoadLeapADLS-To-DB_Channelupdate",
	"properties": {
		"activities": [
			{
				"name": "GetFileDetails-Cloud1",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderStoredProcedureName": "[dbo].[SpGetCloudFileDetails_CahnnelUpdate_Single]",
						"storedProcedureParameters": {
							"CloudInstance": {
								"type": "Byte",
								"value": "1"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DataFoundationConnectionV2",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Checkfiles-Cloud1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetFileDetails-Cloud1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileDetails-Cloud1').output.value\n",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "GetFileList-Cloud1",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "SpFileImportLog_Start",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADLSDataset_Onefile",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
											"type": "Expression"
										},
										"directory": "cntleap",
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists",
									"itemName",
									"lastModified",
									"itemType"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "If File Exists-Cloud1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GetFileList-Cloud1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('GetFileList-Cloud1').output.exists",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "IfFileFound-Cloud1",
										"type": "Switch",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"on": {
												"value": "@string(item().FileID)",
												"type": "Expression"
											},
											"cases": [
												{
													"value": "147",
													"activities": [
														{
															"name": "ChannelUpdate_Cloud1",
															"description": "Copy a file from the source store to the destination store.",
															"type": "Copy",
															"dependsOn": [],
															"policy": {
																"timeout": "7.00:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "DelimitedTextSource",
																	"additionalColumns": [
																		{
																			"name": "Filename",
																			"value": {
																				"value": "@activity('GetFileList-Cloud1').output.itemName",
																				"type": "Expression"
																			}
																		},
																		{
																			"name": "LastModifiedDatetime",
																			"value": {
																				"value": "@addminutes(utcnow(),330)",
																				"type": "Expression"
																			}
																		},
																		{
																			"name": "FileSetID",
																			"value": {
																				"value": "0",
																				"type": "Expression"
																			}
																		}
																	],
																	"storeSettings": {
																		"type": "AzureBlobFSReadSettings",
																		"recursive": true,
																		"wildcardFileName": {
																			"value": "@activity('GetFileList-Cloud1').output.itemName",
																			"type": "Expression"
																		},
																		"enablePartitionDiscovery": false
																	},
																	"formatSettings": {
																		"type": "DelimitedTextReadSettings"
																	},
																	"recursive": false
																},
																"sink": {
																	"type": "SqlDWSink",
																	"allowPolyBase": true,
																	"polyBaseSettings": {
																		"rejectValue": 0,
																		"rejectType": "value",
																		"useTypeDefault": true
																	},
																	"disableMetricsCollection": false
																},
																"enableStaging": true,
																"stagingSettings": {
																	"linkedServiceName": {
																		"referenceName": "DFPolybaseStagingStorageLink",
																		"type": "LinkedServiceReference"
																	},
																	"path": "polybasestaging"
																},
																"dataIntegrationUnits": 2,
																"translator": {
																	"type": "TabularTranslator",
																	"mappings": [
																		{
																			"source": {
																				"name": "uploaded_date",
																				"type": "String"
																			},
																			"sink": {
																				"name": "uploaded_date",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "distributor_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "distributor_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "distributor_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "distributor_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "branch_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "branch_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "branch_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "branch_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "retailer_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "retailer_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "retailer_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "retailer_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "class_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "class_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "class_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "class_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_type_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_type_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_type_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_type_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "effective_from_date",
																				"type": "String"
																			},
																			"sink": {
																				"name": "effective_from_date",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "FileSetID",
																				"type": "String"
																			},
																			"sink": {
																				"name": "FileSetId",
																				"type": "Int64"
																			}
																		},
																		{
																			"source": {
																				"name": "Filename",
																				"type": "String"
																			},
																			"sink": {
																				"name": "Filename",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "LastModifiedDatetime",
																				"type": "String"
																			},
																			"sink": {
																				"name": "LastModifiedDatetime",
																				"type": "String"
																			}
																		}
																	]
																}
															},
															"inputs": [
																{
																	"referenceName": "ADLSCSVDataSource_File",
																	"type": "DatasetReference",
																	"parameters": {
																		"Container": "cntleap",
																		"Directory": {
																			"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
																			"type": "Expression"
																		},
																		"Filename": {
																			"value": "@item().name",
																			"type": "Expression"
																		}
																	}
																}
															],
															"outputs": [
																{
																	"referenceName": "DS_Destination_table",
																	"type": "DatasetReference",
																	"parameters": {
																		"tablename": {
																			"value": "@item().temptablename",
																			"type": "Expression"
																		}
																	}
																}
															]
														}
													]
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "SpFileImportLog_Start",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[SpFileImportLog_ChannelUpdate]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"value": "1",
										"type": "Byte"
									},
									"DataDate": {
										"value": {
											"value": "@item().DataDate",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"FileID": {
										"value": {
											"value": "@item().FileID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"flgStartStop": {
										"value": "1",
										"type": "Byte"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Dev_DataFoundationDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SpFileImportLog_End",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "If File Exists-Cloud1",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[SpFileImportLog_ChannelUpdate]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"value": "1",
										"type": "Byte"
									},
									"DataDate": {
										"value": {
											"value": "@item().DataDate",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"FileID": {
										"value": {
											"value": "@item().FileID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"flgStartStop": {
										"value": "2",
										"type": "Byte"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Dev_DataFoundationDB",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "GetFileDetails-Cloud2",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderStoredProcedureName": "[dbo].[SpGetCloudFileDetails_CahnnelUpdate_Single]",
						"storedProcedureParameters": {
							"CloudInstance": {
								"type": "Byte",
								"value": "2"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DataFoundationConnectionV2",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Checkfiles-Cloud2",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetFileDetails-Cloud2",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileDetails-Cloud2').output.value\n",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "GetFileList-Cloud2",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "SpFileImportLog_Cloud2_Start",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADLSDataset_Onefile",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
											"type": "Expression"
										},
										"directory": "cntleap",
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists",
									"itemName",
									"lastModified",
									"itemType"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "SpFileImportLog_Cloud2_Start",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[SpFileImportLog_ChannelUpdate]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"value": "2",
										"type": "Byte"
									},
									"DataDate": {
										"value": {
											"value": "@item().DataDate",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"FileID": {
										"value": {
											"value": "@item().FileID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"flgStartStop": {
										"value": "1",
										"type": "Byte"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Dev_DataFoundationDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SpFileImportLog_Cloud2_End",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "If File Exists-Cloud2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[SpFileImportLog_ChannelUpdate]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"value": "2",
										"type": "Byte"
									},
									"DataDate": {
										"value": {
											"value": "@Item().DataDate",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"FileID": {
										"value": {
											"value": "@item().FileID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"flgStartStop": {
										"value": "2",
										"type": "Byte"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Dev_DataFoundationDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "If File Exists-Cloud2",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GetFileList-Cloud2",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('GetFileList-Cloud2').output.exists",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "IfFileFound-Cloud2",
										"type": "Switch",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"on": {
												"value": "@string(item().FileID)",
												"type": "Expression"
											},
											"cases": [
												{
													"value": "148",
													"activities": [
														{
															"name": "ChannelUpdate_Cloud2",
															"description": "Copy a file from the source store to the destination store.",
															"type": "Copy",
															"dependsOn": [],
															"policy": {
																"timeout": "7.00:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "DelimitedTextSource",
																	"additionalColumns": [
																		{
																			"name": "Filename",
																			"value": {
																				"value": "@activity('GetFileList-Cloud2').output.itemName",
																				"type": "Expression"
																			}
																		},
																		{
																			"name": "LastModifiedDatetime",
																			"value": {
																				"value": "@addminutes(utcnow(),330)",
																				"type": "Expression"
																			}
																		},
																		{
																			"name": "FileSetID",
																			"value": {
																				"value": "0",
																				"type": "Expression"
																			}
																		}
																	],
																	"storeSettings": {
																		"type": "AzureBlobFSReadSettings",
																		"recursive": true,
																		"wildcardFileName": {
																			"value": "@activity('GetFileList-Cloud2').output.itemName",
																			"type": "Expression"
																		},
																		"enablePartitionDiscovery": false
																	},
																	"formatSettings": {
																		"type": "DelimitedTextReadSettings"
																	},
																	"recursive": false
																},
																"sink": {
																	"type": "SqlDWSink",
																	"allowPolyBase": true,
																	"polyBaseSettings": {
																		"rejectValue": 0,
																		"rejectType": "value",
																		"useTypeDefault": true
																	},
																	"disableMetricsCollection": false
																},
																"enableStaging": true,
																"stagingSettings": {
																	"linkedServiceName": {
																		"referenceName": "DFPolybaseStagingStorageLink",
																		"type": "LinkedServiceReference"
																	},
																	"path": "polybasestaging"
																},
																"dataIntegrationUnits": 2,
																"translator": {
																	"type": "TabularTranslator",
																	"mappings": [
																		{
																			"source": {
																				"name": "uploaded_date",
																				"type": "String"
																			},
																			"sink": {
																				"name": "uploaded_date",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "distributor_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "distributor_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "distributor_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "distributor_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "branch_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "branch_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "branch_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "branch_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "retailer_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "retailer_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "retailer_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "retailer_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "class_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "class_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "class_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "class_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_type_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_type_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_type_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_type_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "effective_from_date",
																				"type": "String"
																			},
																			"sink": {
																				"name": "effective_from_date",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "FileSetID",
																				"type": "String"
																			},
																			"sink": {
																				"name": "FileSetId",
																				"type": "Int64"
																			}
																		},
																		{
																			"source": {
																				"name": "Filename",
																				"type": "String"
																			},
																			"sink": {
																				"name": "Filename",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "LastModifiedDatetime",
																				"type": "String"
																			},
																			"sink": {
																				"name": "LastModifiedDatetime",
																				"type": "String"
																			}
																		}
																	]
																}
															},
															"inputs": [
																{
																	"referenceName": "ADLSCSVDataSource_File",
																	"type": "DatasetReference",
																	"parameters": {
																		"Container": "cntleap",
																		"Directory": {
																			"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
																			"type": "Expression"
																		},
																		"Filename": {
																			"value": "@item().name",
																			"type": "Expression"
																		}
																	}
																}
															],
															"outputs": [
																{
																	"referenceName": "DS_Destination_table",
																	"type": "DatasetReference",
																	"parameters": {
																		"tablename": {
																			"value": "@item().temptablename",
																			"type": "Expression"
																		}
																	}
																}
															]
														}
													]
												}
											]
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "GetFileDetails-Cloud3",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlDWSource",
						"sqlReaderStoredProcedureName": "[dbo].[SpGetCloudFileDetails_CahnnelUpdate_Single]",
						"storedProcedureParameters": {
							"CloudInstance": {
								"type": "Byte",
								"value": "3"
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DataFoundationConnectionV2",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Checkfiles-Cloud3",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "GetFileDetails-Cloud3",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('GetFileDetails-Cloud3').output.value\n",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "GetFileList-Cloud3",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "SpFileImportLog_Cloud3_Start",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADLSDataset_Onefile",
									"type": "DatasetReference",
									"parameters": {
										"folder": {
											"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
											"type": "Expression"
										},
										"directory": "cntleap",
										"filename": {
											"value": "@item().name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists",
									"itemName",
									"lastModified",
									"itemType"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							}
						},
						{
							"name": "SpFileImportLog_Cloud3_Start",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[SpFileImportLog_ChannelUpdate]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"value": "3",
										"type": "Byte"
									},
									"DataDate": {
										"value": {
											"value": "@item().DataDate",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"FileID": {
										"value": {
											"value": "@item().FileID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"flgStartStop": {
										"value": "1",
										"type": "Byte"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Dev_DataFoundationDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "SpFileImportLog_Cloud3_End",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "If File Exists-Cloud3",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[SpFileImportLog_ChannelUpdate]",
								"storedProcedureParameters": {
									"CloudInstance": {
										"value": "3",
										"type": "Byte"
									},
									"DataDate": {
										"value": {
											"value": "@item().DataDate",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"FileID": {
										"value": {
											"value": "@item().FileID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"flgStartStop": {
										"value": "2",
										"type": "Byte"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Dev_DataFoundationDB",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "If File Exists-Cloud3",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GetFileList-Cloud3",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@activity('GetFileList-Cloud3').output.exists",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "IfFileFound-Cloud3",
										"type": "Switch",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"on": {
												"value": "@string(item().FileID)",
												"type": "Expression"
											},
											"cases": [
												{
													"value": "149",
													"activities": [
														{
															"name": "ChannelUpdate_Cloud3",
															"description": "Copy a file from the source store to the destination store.",
															"type": "Copy",
															"dependsOn": [],
															"policy": {
																"timeout": "7.00:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "DelimitedTextSource",
																	"additionalColumns": [
																		{
																			"name": "Filename",
																			"value": {
																				"value": "@activity('GetFileList-Cloud3').output.itemName",
																				"type": "Expression"
																			}
																		},
																		{
																			"name": "LastModifiedDatetime",
																			"value": {
																				"value": "@addminutes(utcnow(),330)",
																				"type": "Expression"
																			}
																		},
																		{
																			"name": "FileSetID",
																			"value": {
																				"value": "0",
																				"type": "Expression"
																			}
																		}
																	],
																	"storeSettings": {
																		"type": "AzureBlobFSReadSettings",
																		"recursive": true,
																		"wildcardFileName": {
																			"value": "@activity('GetFileList-Cloud3').output.itemName",
																			"type": "Expression"
																		},
																		"enablePartitionDiscovery": false
																	},
																	"formatSettings": {
																		"type": "DelimitedTextReadSettings"
																	},
																	"recursive": false
																},
																"sink": {
																	"type": "SqlDWSink",
																	"allowPolyBase": true,
																	"polyBaseSettings": {
																		"rejectValue": 0,
																		"rejectType": "value",
																		"useTypeDefault": true
																	},
																	"disableMetricsCollection": false
																},
																"enableStaging": true,
																"stagingSettings": {
																	"linkedServiceName": {
																		"referenceName": "DFPolybaseStagingStorageLink",
																		"type": "LinkedServiceReference"
																	},
																	"path": "polybasestaging"
																},
																"dataIntegrationUnits": 2,
																"translator": {
																	"type": "TabularTranslator",
																	"mappings": [
																		{
																			"source": {
																				"name": "uploaded_date",
																				"type": "String"
																			},
																			"sink": {
																				"name": "uploaded_date",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "distributor_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "distributor_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "distributor_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "distributor_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "branch_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "branch_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "branch_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "branch_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "retailer_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "retailer_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "retailer_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "retailer_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "class_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "class_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "class_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "class_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_type_code",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_type_code",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "channel_type_name",
																				"type": "String"
																			},
																			"sink": {
																				"name": "channel_type_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "effective_from_date",
																				"type": "String"
																			},
																			"sink": {
																				"name": "effective_from_date",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "FileSetID",
																				"type": "String"
																			},
																			"sink": {
																				"name": "FileSetId",
																				"type": "Int64"
																			}
																		},
																		{
																			"source": {
																				"name": "Filename",
																				"type": "String"
																			},
																			"sink": {
																				"name": "Filename",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "LastModifiedDatetime",
																				"type": "String"
																			},
																			"sink": {
																				"name": "LastModifiedDatetime",
																				"type": "String"
																			}
																		}
																	]
																}
															},
															"inputs": [
																{
																	"referenceName": "ADLSCSVDataSource_File",
																	"type": "DatasetReference",
																	"parameters": {
																		"Container": "cntleap",
																		"Directory": {
																			"value": "@concat('/', formatDateTime(item().DataDate, 'yyyy'), '/', formatDateTime(item().DataDate, 'MM'), '/', formatDateTime(item().DataDate,'dd'), '/')",
																			"type": "Expression"
																		},
																		"Filename": {
																			"value": "@item().name",
																			"type": "Expression"
																		}
																	}
																}
															],
															"outputs": [
																{
																	"referenceName": "DS_Destination_table",
																	"type": "DatasetReference",
																	"parameters": {
																		"tablename": {
																			"value": "@item().temptablename",
																			"type": "Expression"
																		}
																	}
																}
															]
														}
													]
												}
											]
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"folder": {
			"name": "V2 Pipelines"
		},
		"annotations": []
	}
}